C51 COMPILER V8.09   APP                                                                   09/19/2014 21:48:16 PAGE 1   


C51 COMPILER V8.09, COMPILATION OF MODULE APP
OBJECT MODULE PLACED IN .\app.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.exe app.c LARGE PRINT(.\app.lst) OBJECT(.\app.obj) SYMBOLS

line level    source

   1          
   2          #define MANGLED_NESC_APP_C
   3          #define nx_struct struct
   4          #define nx_union union
   5          #define dbg(mode, format) ((void)0)
   6          #define dbg_clear(mode, format) ((void)0)
   7          #define dbg_active(mode) 0
   8          //# 151 "/usr/lib/gcc/i686-pc-cygwin/3.4.4/include/stddef.h" 3
   9          typedef int ptrdiff_t;
  10          //#line 213
  11          typedef unsigned int size_t;
  12          //#line 325
  13          typedef short unsigned int wchar_t;
  14          //# 8 "/usr/lib/ncc/deputy_nodeputy.h"
  15          /*struct __nesc_attr_nonnull {
  16          }  ;*/
  17          //#line 9
  18          /*struct __nesc_attr_bnd {
  19          //#line 9
  20            void *lo, *hi;
  21          }  ;*/
  22          //#line 10
  23          /*struct __nesc_attr_bnd_nok {
  24          //#line 10
  25            void *lo, *hi;
  26          }  ;*/
  27          //#line 11
  28          /*struct __nesc_attr_count {
  29          //#line 11
  30            int n;
  31          }  ;*/
  32          //#line 12
  33          /*struct __nesc_attr_count_nok {
  34          //#line 12
  35            int n;
  36          }  ;*/
  37          //#line 13
  38          /*struct __nesc_attr_one {
  39          }  ;*/
  40          //#line 14
  41          /*struct __nesc_attr_one_nok {
  42          }  ;*/
  43          //#line 15
  44          /*struct __nesc_attr_dmemset {
  45          //#line 15
  46            int a1, a2, a3;
  47          }  ;*/
  48          //#line 16
  49          /*struct __nesc_attr_dmemcpy {
  50          //#line 16
  51            int a1, a2, a3;
  52          }  ;*/
  53          //#line 17
  54          /*struct __nesc_attr_nts {
  55          }  ;*/
C51 COMPILER V8.09   APP                                                                   09/19/2014 21:48:16 PAGE 2   

  56          //# 47 "/opt/tinyos-2.x-contrib/diku/mcs51/tos/chips/mcs51/keil_stdint.h" 3
  57          typedef signed char int8_t;
  58          typedef short int16_t;
  59          
  60          
  61          
  62          typedef long int32_t;
  63          
  64          
  65          /*typedef long long int int64_t;*/
  66          
  67          
  68          
  69          
  70          typedef unsigned char uint8_t;
  71          typedef unsigned short uint16_t;
  72          
  73          
  74          
  75          typedef unsigned long uint32_t;
  76          
  77          
  78          /*typedef unsigned long long int uint64_t;*/
  79          //# 42 "/opt/tinyos-2.x-contrib/diku/mcs51/tos/chips/mcs51/stdint.h" 3
  80          typedef signed char int_least8_t;
  81          typedef short int int_least16_t;
  82          typedef long int_least32_t;
  83          
  84          
  85          
  86          
  87          
  88          
  89          
  90          
  91          
  92          typedef unsigned char uint_least8_t;
  93          typedef unsigned short uint_least16_t;
  94          typedef unsigned long uint_least32_t;
  95          //#line 70
  96          typedef signed char int_fast8_t;
  97          
  98          
  99          
 100          
 101          
 102          typedef int int_fast16_t;
 103          typedef int int_fast32_t;
 104          
 105          
 106          
 107          
 108          
 109          typedef unsigned char uint_fast8_t;
 110          
 111          
 112          
 113          
 114          
 115          typedef unsigned int uint_fast16_t;
 116          typedef unsigned int uint_fast32_t;
 117          //#line 105
C51 COMPILER V8.09   APP                                                                   09/19/2014 21:48:16 PAGE 3   

 118          typedef int intptr_t;
 119          
 120          
 121          typedef unsigned int uintptr_t;
 122          
 123          
 124          
 125          
 126          
 127          
 128          
 129          
 130          /*__extension__*/ 
 131          typedef
 132                   float* intmax_t;
 133                
 134          /*__extension__*/ 
 135          typedef 
 136                   float* uintmax_t;
 137                
 138          //# 231 "/usr/include/inttypes.h" 3
 139          //#line 228
 140          typedef struct __nesc_unnamed4242 {
 141            intmax_t quot;
 142            intmax_t rem;
 143          } imaxdiv_t;
 144          /*YYYYY } imaxdiv_t*///# 385 "/usr/lib/ncc/nesc_nx.h"
 145          typedef struct { unsigned char _data[1]; } /*__attribute__((packed))*/ nx_int8_t;typedef int8_t __nesc_nxb
             -ase_nx_int8_t  ;
 146          typedef struct { unsigned char _data[2]; } /*__attribute__((packed))*/ nx_int16_t;typedef int16_t __nesc_n
             -xbase_nx_int16_t  ;
 147          typedef struct { unsigned char _data[4]; } /*__attribute__((packed))*/ nx_int32_t;typedef int32_t __nesc_n
             -xbase_nx_int32_t  ;
 148          typedef struct { unsigned char _data[8]; } /*__attribute__((packed))*/ nx_int64_t;/*typedef int64_t __nesc
             -_nxbase_nx_int64_t  ;*/
 149          typedef struct { unsigned char _data[1]; } /*__attribute__((packed))*/ nx_uint8_t;typedef uint8_t __nesc_n
             -xbase_nx_uint8_t  ;
 150          typedef struct { unsigned char _data[2]; } /*__attribute__((packed))*/ nx_uint16_t;typedef uint16_t __nesc
             -_nxbase_nx_uint16_t  ;
 151          typedef struct { unsigned char _data[4]; } /*__attribute__((packed))*/ nx_uint32_t;typedef uint32_t __nesc
             -_nxbase_nx_uint32_t  ;
 152          typedef struct { unsigned char _data[8]; } /*__attribute__((packed))*/ nx_uint64_t;/*typedef uint64_t __ne
             -sc_nxbase_nx_uint64_t  ;*/
 153          
 154          
 155          typedef struct { unsigned char _data[1]; } /*__attribute__((packed))*/ nxle_int8_t;typedef int8_t __nesc_n
             -xbase_nxle_int8_t  ;
 156          typedef struct { unsigned char _data[2]; } /*__attribute__((packed))*/ nxle_int16_t;typedef int16_t __nesc
             -_nxbase_nxle_int16_t  ;
 157          typedef struct { unsigned char _data[4]; } /*__attribute__((packed))*/ nxle_int32_t;typedef int32_t __nesc
             -_nxbase_nxle_int32_t  ;
 158          typedef struct { unsigned char _data[8]; } /*__attribute__((packed))*/ nxle_int64_t;/*typedef int64_t __ne
             -sc_nxbase_nxle_int64_t  ;*/
 159          typedef struct { unsigned char _data[1]; } /*__attribute__((packed))*/ nxle_uint8_t;typedef uint8_t __nesc
             -_nxbase_nxle_uint8_t  ;
 160          typedef struct { unsigned char _data[2]; } /*__attribute__((packed))*/ nxle_uint16_t;typedef uint16_t __ne
             -sc_nxbase_nxle_uint16_t  ;
 161          typedef struct { unsigned char _data[4]; } /*__attribute__((packed))*/ nxle_uint32_t;typedef uint32_t __ne
             -sc_nxbase_nxle_uint32_t  ;
 162          typedef struct { unsigned char _data[8]; } /*__attribute__((packed))*/ nxle_uint64_t;/*typedef uint64_t __
             -nesc_nxbase_nxle_uint64_t  ;*/
 163          //# 13 "/opt/tinyos-2.x-contrib/diku/mcs51/tos/chips/mcs51/string.h"
C51 COMPILER V8.09   APP                                                                   09/19/2014 21:48:16 PAGE 4   

 164          extern void *memset(void *s, char val, int n);
 165          //# 14 "/usr/include/sys/lock.h" 3
 166          typedef void *_LOCK_T;
 167          //# 14 "/usr/include/sys/_types.h" 3
 168          typedef long _off_t;
 169          /*__extension__*/ 
 170          //#line 15
 171          typedef
 172                   float* _off64_t;
 173                
 174          
 175          
 176          typedef int _ssize_t;
 177          //# 354 "/usr/lib/gcc/i686-pc-cygwin/3.4.4/include/stddef.h" 3
 178          typedef unsigned int wint_t;
 179          //# 35 "/usr/include/sys/_types.h" 3
 180          //#line 27
 181          typedef struct __nesc_unnamed4243 {
 182          
 183            int __count;
 184            union __nesc_unnamed4244 {
 185          
 186              wint_t __wch;
 187              unsigned char __wchb[4];
 188            } __value;
 189          /*YYYYY   } __value*/} _mbstate_t;
 190          
 191          typedef _LOCK_T _flock_t;
 192          
 193          
 194          typedef void *_iconv_t;
 195          //# 19 "/usr/include/sys/reent.h" 3
 196          typedef unsigned long __ULong;
 197          //#line 40
 198          struct _Bigint {
 199          
 200            struct _Bigint *_next;
 201            int _k, _maxwds, _sign, _wds;
 202            __ULong _x[1];
 203          };
 204          
 205          
 206          struct __tm {
 207          
 208            int __tm_sec;
 209            int __tm_min;
 210            int __tm_hour;
 211            int __tm_mday;
 212            int __tm_mon;
 213            int __tm_year;
 214            int __tm_wday;
 215            int __tm_yday;
 216            int __tm_isdst;
 217          };
 218          
 219          
 220          
 221          
 222          
 223          
 224          
 225          struct _on_exit_args {
C51 COMPILER V8.09   APP                                                                   09/19/2014 21:48:16 PAGE 5   

 226            void *_fnargs[32];
 227            void *_dso_handle[32];
 228          
 229            __ULong _fntypes;
 230          
 231          
 232            __ULong _is_cxa;
 233          };
 234          
 235          
 236          
 237          
 238          
 239          
 240          
 241          
 242          
 243          struct _atexit {
 244            struct _atexit *_next;
 245            int _ind;
 246          
 247            void (*_fns[32])(void );
 248            struct _on_exit_args _on_exit_args;
 249          };
 250          
 251          
 252          
 253          
 254          
 255          
 256          
 257          
 258          
 259          struct __sbuf {
 260            unsigned char *_base;
 261            int _size;
 262          };
 263          
 264          
 265          
 266          
 267          
 268          
 269          typedef long _fpos_t;
 270          
 271          
 272          
 273          typedef _off64_t _fpos64_t;
 274          //#line 166
 275          struct __sFILE {
 276            unsigned char *_p;
 277            int _r;
 278            int _w;
 279            short _flags;
 280            short _file;
 281            struct __sbuf _bf;
 282            int _lbfsize;
 283          
 284          
 285          
 286          
 287          
C51 COMPILER V8.09   APP                                                                   09/19/2014 21:48:16 PAGE 6   

 288          
 289            char *_cookie;
 290          
 291            _ssize_t (*_read)();
 292            _ssize_t (*_write)();
 293          
 294            _fpos_t (*_seek)();
 295            int (*_close)();
 296          
 297          
 298            struct __sbuf _ub;
 299            unsigned char *_up;
 300            int _ur;
 301          
 302          
 303            unsigned char _ubuf[3];
 304            unsigned char _nbuf[1];
 305          
 306          
 307            struct __sbuf _lb;
 308          
 309          
 310            int _blksize;
 311            int _offset;
 312          
 313          
 314            struct _reent *__data;
 315          
 316          
 317          
 318            _flock_t _lock;
 319          };
 320          
 321          
 322          
 323          struct __sFILE64 {
 324            unsigned char *_p;
 325            int _r;
 326            int _w;
 327            short _flags;
 328            short _file;
 329            struct __sbuf _bf;
 330            int _lbfsize;
 331          
 332            struct _reent *__data;
 333          
 334          
 335            char *_cookie;
 336          
 337            _ssize_t (*_read)();
 338            _ssize_t (*_write)();
 339          
 340            _fpos_t (*_seek)();
 341            int (*_close)();
 342          
 343          
 344            struct __sbuf _ub;
 345            unsigned char *_up;
 346            int _ur;
 347          
 348          
 349            unsigned char _ubuf[3];
C51 COMPILER V8.09   APP                                                                   09/19/2014 21:48:16 PAGE 7   

 350            unsigned char _nbuf[1];
 351          
 352          
 353            struct __sbuf _lb;
 354          
 355          
 356            int _blksize;
 357            int _flags2;
 358          
 359            _off64_t _offset;
 360            _fpos64_t (*_seek64)();
 361          
 362          
 363            _flock_t _lock;
 364          };
 365          
 366          typedef struct __sFILE64 __FILE;
 367          
 368          
 369          
 370          
 371          struct _glue {
 372          
 373            struct _glue *_next;
 374            int _niobs;
 375            __FILE *_iobs;
 376          };
 377          //#line 290
 378          struct _rand48 {
 379            unsigned short _seed[3];
 380            unsigned short _mult[3];
 381            unsigned short _add;
 382          };
 383          //#line 565
 384          struct _reent {
 385          
 386            int _errno;
 387          
 388          
 389          
 390          
 391            __FILE *_stdin, *_stdout, *_stderr;
 392          
 393            int _inc;
 394            char _emergency[25];
 395          
 396            int _current_category;
 397            char *_current_locale;
 398          
 399            int __sdidinit;
 400          
 401            void (*__cleanup)();
 402          
 403          
 404            struct _Bigint *_result;
 405            int _result_k;
 406            struct _Bigint *_p5s;
 407            struct _Bigint **_freelist;
 408          
 409          
 410            int _cvtlen;
 411            char *_cvtbuf;
C51 COMPILER V8.09   APP                                                                   09/19/2014 21:48:16 PAGE 8   

 412          
 413            union __nesc_unnamed4245 {
 414          
 415              struct __nesc_unnamed4246 {
 416          
 417                unsigned int _unused_rand;
 418                char *_strtok_last;
 419                char _asctime_buf[26];
 420                struct __tm _localtime_buf;
 421                int _gamma_signgam;
 422                /*__extension__*/ 
 423                   float* _rand_next;
 424                
 425                struct _rand48 _r48;
 426                _mbstate_t _mblen_state;
 427                _mbstate_t _mbtowc_state;
 428                _mbstate_t _wctomb_state;
 429                char _l64a_buf[8];
 430                char _signal_buf[24];
 431                int _getdate_err;
 432                _mbstate_t _mbrlen_state;
 433                _mbstate_t _mbrtowc_state;
 434                _mbstate_t _mbsrtowcs_state;
 435                _mbstate_t _wcrtomb_state;
 436                _mbstate_t _wcsrtombs_state;
 437              } _reent;
 438          
 439          
 440          
 441              struct __nesc_unnamed4247 {
 442          
 443          
 444                unsigned char *_nextf[30];
 445                unsigned int _nmalloc[30];
 446              } _unused;
 447            } _new;
 448          
 449          
 450            struct _atexit *_atexit;
 451            struct _atexit _atexit0;
 452          
 453          
 454            void (**_sig_func)(int arg_0x7f2108a0);
 455          
 456          
 457          
 458          
 459            struct _glue __sglue;
 460            __FILE __sf[3];
 461          };
 462          //#line 799
 463          struct _reent;
 464          struct _reent;
 465          
 466          
 467          
 468          
 469          
 470          
 471          
 472          
 473          
C51 COMPILER V8.09   APP                                                                   09/19/2014 21:48:16 PAGE 9   

 474          struct _reent;
 475          //# 32 "/usr/include/stdlib.h" 3
 476          //#line 28
 477          typedef struct __nesc_unnamed4248 {
 478          
 479            int quot;
 480            int rem;
 481          } div_t;
 482          /*YYYYY } div_t*/
 483          
 484          
 485          
 486          
 487          //#line 34
 488          typedef struct __nesc_unnamed4249 {
 489          
 490            long quot;
 491            long rem;
 492          } ldiv_t;
 493          /*YYYYY } ldiv_t*/
 494          
 495          
 496          
 497          
 498          
 499          //#line 41
 500          typedef struct __nesc_unnamed4250 {
 501          
 502          
 503                   float* quot;
 504                
 505          
 506                   float* rem;
 507                
 508          } lldiv_t;
 509          /*YYYYY } lldiv_t*///# 24 "/opt/tinyos-2.x-contrib/diku/common/tos/system/tos.h"
 510          typedef uint8_t bool  ;
 511          enum __nesc_unnamed4251 {
 512          //#line 25
 513            FALSE = 0, TRUE = 1
 514          };
 515          
 516          
 517          
 518          
 519          
 520          
 521          
 522          
 523          
 524          typedef nx_int8_t nx_bool;
 525          
 526          
 527          
 528          
 529          
 530          
 531          /*struct __nesc_attr_atmostonce {
 532          };*/
 533          //#line 44
 534          /*struct __nesc_attr_atleastonce {
 535          };*/
C51 COMPILER V8.09   APP                                                                   09/19/2014 21:48:16 PAGE 10  

 536          //#line 45
 537          /*struct __nesc_attr_exactlyonce {
 538          };*/
 539          //# 40 "/opt/tinyos-2.x/tos/types/TinyError.h"
 540          enum __nesc_unnamed4252 {
 541            SUCCESS = 0, 
 542            FAIL = 1, 
 543            ESIZE = 2, 
 544            ECANCEL = 3, 
 545            EOFF = 4, 
 546            EBUSY = 5, 
 547            EINVAL = 6, 
 548            ERETRY = 7, 
 549            ERESERVE = 8, 
 550            EALREADY = 9, 
 551            ENOMEM = 10, 
 552            ENOACK = 11, 
 553            ELAST = 11
 554          };
 555          
 556          typedef uint8_t error_t  ;
 557          //# 160 "/opt/tinyos-2.x-contrib/diku/mcs51/tos/chips/mcs51/io8051.h"
 558          sbit EA = 0xAF;
 559          //#line 194
 560          sbit P1_0 = 0x90;
 561          
 562          
 563          sbit P1_3 = 0x93;
 564          //# 67 "/opt/tinyos-2.x-contrib/diku/mcs51/tos/chips/cc2430/ioCC2430.h"
 565          enum __nesc_unnamed4253 {
 566            CC2430_IEN0_EA = 0x7, 
 567            CC2430_IEN0_STIE = 0x5, 
 568            CC2430_IEN0_ENCIE = 0x4, 
 569            CC2430_IEN0_URX1IE = 0x3, 
 570            CC2430_IEN0_URX0IE = 0x2, 
 571            CC2430_IEN0_ADCIE = 0x1, 
 572            CC2430_IEN0_RFERRIE = 0x0
 573          };
 574          
 575          
 576          
 577          
 578          
 579          enum __nesc_unnamed4254 {
 580            CC2430_IEN2_WDTIE = 0x5, 
 581            CC2430_IEN2_P1IE = 0x4, 
 582            CC2430_IEN2_UTX1IE = 0x3, 
 583            CC2430_IEN2_UTX0IE = 0x2, 
 584            CC2430_IEN2_P2IE = 0x1, 
 585            CC2430_IEN2_RFIE = 0x0
 586          };
 587          
 588          
 589          
 590          
 591          
 592          enum __nesc_unnamed4255 {
 593            CC2430_IRCON_STIF = 0x7, 
 594            CC2430_IRCON_P0IF = 0x5, 
 595            CC2430_IRCON_T4IF = 0x4, 
 596            CC2430_IRCON_T3IF = 0x3, 
 597            CC2430_IRCON_T2IF = 0x2, 
C51 COMPILER V8.09   APP                                                                   09/19/2014 21:48:16 PAGE 11  

 598            CC2430_IRCON_T1IF = 0x1, 
 599            CC2430_IRCON_DMAIF = 0x0
 600          };
 601          
 602          
 603          
 604          
 605          
 606          enum __nesc_unnamed4256 {
 607            CC2430_IRCON2_WDTIF = 0x4, 
 608            CC2430_IRCON2_P1IF = 0x3, 
 609            CC2430_IRCON2_UTX1IF = 0x2, 
 610            CC2430_IRCON2_UTX0IF = 0x1, 
 611            CC2430_IRCON2_P2IF = 0x0
 612          };
 613          
 614          
 615          
 616          
 617          
 618          enum __nesc_unnamed4257 {
 619            CC2430_RFIM_RREG_PD = 0x7, 
 620            CC2430_RFIM_TXDONE = 0x6, 
 621            CC2430_RFIM_FIFOP = 0x5, 
 622            CC2430_RFIM_SFD = 0x4, 
 623            CC2430_RFIM_CCA = 0x3, 
 624            CC2430_RFIM_CSP_WT = 0x2, 
 625            CC2430_RFIM_CSP_STOP = 0x1, 
 626            CC2430_RFIM_CSP_INT = 0x0
 627          };
 628          
 629          
 630          
 631          
 632          
 633          enum __nesc_unnamed4258 {
 634            CC2430_RFIF_RREG_ON = 0x7, 
 635            CC2430_RFIF_TXDONE = 0x6, 
 636            CC2430_RFIF_FIFOP = 0x5, 
 637            CC2430_RFIF_SFD = 0x4, 
 638            CC2430_RFIF_CCA = 0x3, 
 639            CC2430_RFIF_CSP_WT = 0x2, 
 640            CC2430_RFIF_CSP_STOP = 0x1, 
 641            CC2430_RFIF_CSP_INT = 0x0
 642          };
 643          //#line 168
 644          sfr U0CSR = 0x86;
 645          //#line 183
 646          sbit URX0IF = 0x8B;
 647          //#line 200
 648          sfr IEN2 = 0x9A;
 649          //#line 219
 650          sbit URX0IE = 0xAA;
 651          //#line 256
 652          sfr SLEEP = 0xBE;
 653          
 654          
 655          sfr U0BUF = 0xC1;
 656          sfr U0BAUD = 0xC2;
 657          
 658          sfr U0UCR = 0xC4;
 659          sfr U0GCR = 0xC5;
C51 COMPILER V8.09   APP                                                                   09/19/2014 21:48:16 PAGE 12  

 660          sfr CLKCON = 0xC6;
 661          //#line 334
 662          sbit UTX0IF = 0xE9;
 663          //#line 347
 664          sfr PERCFG = 0xF1;
 665          
 666          
 667          
 668          
 669          sfr P1_DIR = 0xFE;
 670          
 671          
 672          
 673          sfr P0_ALT = 0xF3;
 674          //#line 393
 675          //typedef uint16_t uint16_t xdata;
 676          //typedef uint8_t uint8_t xdata;
 677          
 678          //typedef uint16_t uint16_t code;
 679          //typedef uint8_t uint8_t code;
 680          //#line 479
 681          enum __nesc_unnamed4259 {
 682            CC2430_RFPWR_ADI_RADIO_PD = 0x4, 
 683            CC2430_RFPWR_RREG_RADIO_PD = 0x3, 
 684            CC2430_RFPWR_RREG_DELAY = 0x0, 
 685            CC2430_RFPWR_RREG_DELAY_MASK = 0x7
 686          };
 687          
 688          enum __nesc_unnamed4260 {
 689            CC2430_RREG_DELAY_0 = 0x0, 
 690            CC2430_RREG_DELAY_31 = 0x1, 
 691            CC2430_RREG_DELAY_63 = 0x2, 
 692            CC2430_RREG_DELAY_125 = 0x3, 
 693            CC2430_RREG_DELAY_250 = 0x4, 
 694            CC2430_RREG_DELAY_500 = 0x5, 
 695            CC2430_RREG_DELAY_1000 = 0x6, 
 696            CC2430_RREG_DELAY_2000 = 0x7
 697          };
 698          
 699          enum __nesc_unnamed4261 {
 700            CC2430_MDMCTRL0L_AUTOCRC = 0x5, 
 701            CC2430_MDMCTRL0L_AUTOACK = 0x4
 702          };
 703          
 704          enum __nesc_unnamed4262 {
 705            CC2430_MDMCTRL0H_FRAME_FILT = 0x6, 
 706            CC2430_MDMCTRL0H_RESERVED_FRAME_MODE = 0x5, 
 707            CC2430_MDMCTRL0H_PAN_COORDINATOR = 0x4, 
 708            CC2430_MDMCTRL0H_ADDR_DECODE = 0x3, 
 709            CC2430_MDMCTRL0H_CCA_HYST = 0x0
 710          };
 711          
 712          enum __nesc_unnamed4263 {
 713            CC2430_RFSTATUS_TX_ACTIVE = 0x4, 
 714            CC2430_RFSTATUS_FIFO = 0x3, 
 715            CC2430_RFSTATUS_FIFOP = 0x2, 
 716            CC2430_RFSTATUS_SFD = 0x1, 
 717            CC2430_RFSTATUS_CCA = 0x0
 718          };
 719          //# 102 "/opt/tinyos-2.x-contrib/diku/mcs51/tos/chips/mcs51/mcs51hardware.h"
 720          typedef uint8_t __nesc_atomic_t;
 721          
C51 COMPILER V8.09   APP                                                                   09/19/2014 21:48:16 PAGE 13  

 722          static   /*inline*/   void __nesc_disable_interrupt();
 723          static   /*inline*/   void __nesc_enable_interrupt();
 724          
 725            /*inline*/   __nesc_atomic_t __nesc_atomic_start(void )  ;
 726          
 727          
 728          
 729          
 730          
 731            /*inline*/   void __nesc_atomic_end(__nesc_atomic_t oldSreg)  ;
 732          //# 71 "/opt/tinyos-2.x-contrib/diku/mcs51/tos/chips/cc2430/timer/CC2430Timer.h"
 733          enum __nesc_unnamed4264 {
 734            CC2430_SLEEP_OSC32K_CALDIS = 7, 
 735            CC2430_SLEEP_XOSC_STB = 6, 
 736            CC2430_SLEEP_HFRC_STB = 5, 
 737            CC2430_SLEEP_DIV = 3, 
 738            CC2430_SLEEP_OSC_PD = 2, 
 739            CC2430_SLEEP_MODE = 0, 
 740            CC2430_SLEEP_MODE_MASK = 3
 741          };
 742          
 743          enum __nesc_unnamed4265 {
 744            CC2430_SLEEP_POWERMODE_0 = 0, 
 745            CC2430_SLEEP_POWERMODE_1 = 1, 
 746            CC2430_SLEEP_POWERMODE_2 = 2, 
 747            CC2430_SLEEP_POWERMODE_3 = 3
 748          };
 749          
 750          enum __nesc_unnamed4266 {
 751            CC2430_CLKCON_OSC32K = 7, 
 752            CC2430_CLKCON_OSC = 6, 
 753            CC2430_CLKCON_TICKSPD = 3, 
 754            CC2430_CLKCON_CLKSPD = 0, 
 755            CC2430_CLKCON_TICKSPD_MASK = 0x38
 756          };
 757          
 758          
 759          
 760          
 761          enum cc2430_tick_spd_t {
 762            CC2430_TICKF_DIV_1 = 0x0 << CC2430_CLKCON_TICKSPD, 
 763            CC2430_TICKF_DIV_2 = 0x1 << CC2430_CLKCON_TICKSPD, 
 764            CC2430_TICKF_DIV_4 = 0x2 << CC2430_CLKCON_TICKSPD, 
 765            CC2430_TICKF_DIV_8 = 0x3 << CC2430_CLKCON_TICKSPD, 
 766            CC2430_TICKF_DIV_16 = 0x4 << CC2430_CLKCON_TICKSPD, 
 767            CC2430_TICKF_DIV_32 = 0x5 << CC2430_CLKCON_TICKSPD, 
 768            CC2430_TICKF_DIV_64 = 0x6 << CC2430_CLKCON_TICKSPD, 
 769            CC2430_TICKF_DIV_128 = 0x7 << CC2430_CLKCON_TICKSPD
 770          };
 771          
 772          
 773          
 774          
 775          
 776          
 777          
 778          
 779          
 780          
 781          enum __nesc_unnamed4267 {
 782            CC2430_T1CTL_CH2IF = 0x7, 
 783            CC2430_T1CTL_CH1IF = 0x6, 
C51 COMPILER V8.09   APP                                                                   09/19/2014 21:48:16 PAGE 14  

 784            CC2430_T1CTL_CH0IF = 0x5, 
 785            CC2430_T1CTL_OVFIF = 0x4, 
 786            CC2430_T1CTL_DIV = 0x2, 
 787            CC2430_T1CTL_MODE = 0x0, 
 788            CC2430_T1CTL_MODE_MASK = 0x3, 
 789            CC2430_T1CTL_DIV_MASK = 0xc, 
 790            CC2430_T1CTL_IF_MASK = 0xf0
 791          };
 792          
 793          
 794          
 795          
 796          
 797          
 798          enum cc2430_timer1_mode_t {
 799            CC2430_TIMER1_MODE_OFF = 0x0 << CC2430_T1CTL_MODE, 
 800            CC2430_TIMER1_MODE_FREE = 0x1 << CC2430_T1CTL_MODE, 
 801            CC2430_TIMER1_MODE_MODULO = 0x2 << CC2430_T1CTL_MODE, 
 802            CC2430_TIMER1_MODE_UPDOWN = 0x3 << CC2430_T1CTL_MODE
 803          };
 804          
 805          
 806          
 807          
 808          
 809          
 810          enum cc2430_timer1_if_t {
 811            CC2430_T1_CH2IF = 1 << CC2430_T1CTL_CH2IF, 
 812            CC2430_T1_CH1IF = 1 << CC2430_T1CTL_CH1IF, 
 813            CC2430_T1_CH0IF = 1 << CC2430_T1CTL_CH0IF, 
 814            CC2430_T1_OVFIF = 1 << CC2430_T1CTL_OVFIF
 815          };
 816          
 817          
 818          
 819          
 820          
 821          enum cc2430_timer1_prescaler_t {
 822            CC2430_TIMER1_DIV_1 = 0x0 << CC2430_T1CTL_DIV, 
 823            CC2430_TIMER1_DIV_8 = 0x1 << CC2430_T1CTL_DIV, 
 824            CC2430_TIMER1_DIV_32 = 0x2 << CC2430_T1CTL_DIV, 
 825            CC2430_TIMER1_DIV_128 = 0x3 << CC2430_T1CTL_DIV
 826          };
 827          
 828          
 829          
 830          
 831          
 832          enum __nesc_unnamed4268 {
 833            CC2430_T1CCTLx_CPSEL = 0x7, 
 834            CC2430_T1CCTLx_IM = 0x6, 
 835            CC2430_T1CCTLx_CMP = 0x3, 
 836            CC2430_T1CCTLx_MODE = 0x2, 
 837            CC2430_T1CCTLx_CAP = 0x0
 838          };
 839          
 840          
 841          
 842          
 843          
 844          
 845          
C51 COMPILER V8.09   APP                                                                   09/19/2014 21:48:16 PAGE 15  

 846          
 847          
 848          
 849          enum cc2430_timerMAC_mode_t {
 850            CC2430_TIMERMAC_MODE_IDLE = 0x0, 
 851            CC2430_TIMERMAC_MODE_RUN = 0x1
 852          };
 853          
 854          
 855          
 856          
 857          
 858          enum cc2430_timerMAC_T2CNF_t {
 859            CC2430_T2CNF_CMPIF = 0x7, 
 860            CC2430_T2CNF_PERIF = 0x6, 
 861            CC2430_T2CNF_OFCMPIF = 0x5, 
 862            CC2430_T2CNF_CMSEL = 0x3, 
 863            CC2430_T2CNF_SYNC = 0x1, 
 864            CC2430_T2CNF_RUN = 0x0
 865          };
 866          
 867          
 868          
 869          
 870          
 871          
 872          enum cc2430_timerMAC_T2PEROF2_t {
 873            CC2430_T2PEROF2_CMPIM = 0x7, 
 874            CC2430_T2PEROF2_PERIM = 0x6, 
 875            CC2430_T2PEROF2_OFCMPIM = 0x5
 876          };
 877          
 878          enum cc2430_timerMAC_if_t {
 879            CC2430_TMAC_CMPIF = 1 << CC2430_T2CNF_CMPIF, 
 880            CC2430_TMAC_PERIF = 1 << CC2430_T2CNF_PERIF, 
 881            CC2430_TMAC_OFCMPIF = 1 << CC2430_T2CNF_OFCMPIF
 882          };
 883          
 884          enum cc2430_timerMAC_interval_t {
 885            CC2430_TIMERWDT_32768 = 0, 
 886            CC2430_TIMERWDT_8192 = 1, 
 887            CC2430_TIMERWDT_512 = 2, 
 888            CC2430_TIMERWDT_64 = 3
 889          };
 890          //#line 240
 891          enum __nesc_unnamed4269 {
 892            CC2430_TIMIF_OVFIM = 0x6
 893          };
 894          
 895          enum cc2430_timer34_if_t {
 896            CC2430_TIMIF_T4CH1IF = 0x5, 
 897            CC2430_TIMIF_T4CH0IF = 0x4, 
 898            CC2430_TIMIF_T4OVFIF = 0x3, 
 899            CC2430_TIMIF_T3CH1IF = 0x2, 
 900            CC2430_TIMIF_T3CH0IF = 0x1, 
 901            CC2430_TIMIF_T3OVFIF = 0x0
 902          };
 903          
 904          
 905          
 906          
 907          
C51 COMPILER V8.09   APP                                                                   09/19/2014 21:48:16 PAGE 16  

 908          
 909          enum cc2430_timer3_4_mode_t {
 910            CC2430_TIMER3_4_MODE_FREE = 0x0, 
 911            CC2430_TIMER3_4_MODE_DOWN = 0x1, 
 912            CC2430_TIMER3_4_MODE_MODULO = 0x2, 
 913            CC2430_TIMER3_4_MODE_UPDOWN = 0x3
 914          };
 915          
 916          
 917          
 918          
 919          
 920          enum __nesc_unnamed4270 {
 921            CC2430_T34CTL_DIV = 0x5, 
 922            CC2430_T34CTL_START = 0x4, 
 923            CC2430_T34CTL_OVFIM = 0x3, 
 924            CC2430_T34CTL_WDTIF = 0x3, 
 925            CC2430_T34CTL_CLR = 0x2, 
 926            CC2430_T34CTL_MODE = 0x0, 
 927            CC2430_T34CTL_MODE_MASK = 0x3, 
 928            CC2430_T34CTL_DIV_MASK = 0xe0
 929          };
 930          
 931          
 932          
 933          
 934          
 935          enum cc2430_timer3_4_prescaler_t {
 936            CC2430_TIMER3_4_DIV_1 = 0x0 << CC2430_T34CTL_DIV, 
 937            CC2430_TIMER3_4_DIV_2 = 0x1 << CC2430_T34CTL_DIV, 
 938            CC2430_TIMER3_4_DIV_4 = 0x2 << CC2430_T34CTL_DIV, 
 939            CC2430_TIMER3_4_DIV_8 = 0x3 << CC2430_T34CTL_DIV, 
 940            CC2430_TIMER3_4_DIV_16 = 0x4 << CC2430_T34CTL_DIV, 
 941            CC2430_TIMER3_4_DIV_32 = 0x5 << CC2430_T34CTL_DIV, 
 942            CC2430_TIMER3_4_DIV_64 = 0x6 << CC2430_T34CTL_DIV, 
 943            CC2430_TIMER3_4_DIV_128 = 0x7 << CC2430_T34CTL_DIV
 944          };
 945          
 946          
 947          
 948          
 949          
 950          
 951          
 952          
 953          
 954          
 955          enum __nesc_unnamed4271 {
 956            CC2430_WDCTL_CLR = 0x4, 
 957            CC2430_WDCTL_EN = 0x3, 
 958            CC2430_WDCTL_MODE = 0x2, 
 959            CC2430_WDCTL_INT = 0x0, 
 960            CC2430_WDCTL_INT_MASK = 0x3
 961          };
 962          
 963          enum cc2430_timerWDT_mode_t {
 964            CC2430_TIMERWDT_MODE_WDT = 0x0 << CC2430_WDCTL_MODE, 
 965            CC2430_TIMERWDT_MODE_TIMER = 0x1 << CC2430_WDCTL_MODE
 966          };
 967          //# 42 "/opt/tinyos-2.x-contrib/diku/mcs51/tos/chips/mcs51/Timer.h"
 968          typedef uint8_t TMilli;
 969          typedef uint8_t T32khz;
C51 COMPILER V8.09   APP                                                                   09/19/2014 21:48:16 PAGE 17  

 970          typedef uint8_t TMicro;
 971          //# 32 "/opt/tinyos-2.x/tos/types/Leds.h"
 972          enum __nesc_unnamed4272 {
 973            LEDS_LED0 = 1 << 0, 
 974            LEDS_LED1 = 1 << 1, 
 975            LEDS_LED2 = 1 << 2, 
 976            LEDS_LED3 = 1 << 3, 
 977            LEDS_LED4 = 1 << 4, 
 978            LEDS_LED5 = 1 << 5, 
 979            LEDS_LED6 = 1 << 6, 
 980            LEDS_LED7 = 1 << 7
 981          };
 982          //# 51 "/opt/tinyos-2.x/tos/interfaces/Init.nc"
 983          static error_t PlatformP__Init__init(void );
 984          //# 56 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
 985          static error_t SchedulerBasicP__TaskBasic__postTask(
 986          //# 45 "/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc"
 987          uint8_t arg_0x7ef72230);
 988          //# 64 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
 989          static void SchedulerBasicP__TaskBasic__default__runTask(
 990          //# 45 "/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc"
 991          uint8_t arg_0x7ef72230);
 992          //# 46 "/opt/tinyos-2.x/tos/interfaces/Scheduler.nc"
 993          static void SchedulerBasicP__Scheduler__init(void );
 994          //#line 61
 995          static void SchedulerBasicP__Scheduler__taskLoop(void );
 996          //#line 54
 997          static bool SchedulerBasicP__Scheduler__runNextTask(void );
 998          //# 59 "/opt/tinyos-2.x/tos/interfaces/McuSleep.nc"
 999          static void McuSleepC__McuSleep__sleep(void );
1000          //# 49 "/opt/tinyos-2.x/tos/interfaces/Boot.nc"
1001          static void EchoP__Boot__booted(void );
1002          //# 64 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
1003          static void EchoP__print__runTask(void );
1004          //# 47 "/opt/tinyos-2.x/tos/lib/serial/SerialByteComm.nc"
1005          static void EchoP__uart0__get(uint8_t _data);
1006          
1007          
1008          
1009          
1010          
1011          static void EchoP__uart0__putDone(void );
1012          //# 51 "/opt/tinyos-2.x/tos/interfaces/Init.nc"
1013          static error_t LedsP__Init__init(void );
1014          //# 56 "/opt/tinyos-2.x/tos/interfaces/Leds.nc"
1015          static void LedsP__Leds__led0Toggle(void );
1016          //#line 72
1017          static void LedsP__Leds__led1Toggle(void );
1018          //#line 89
1019          static void LedsP__Leds__led2Toggle(void );
1020          //#line 45
1021          static void LedsP__Leds__led0On(void );
1022          //# 31 "/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc"
1023          static void HplMcs51GeneralIOC__P13__toggle(void );
1024          
1025          
1026          
1027          static void HplMcs51GeneralIOC__P13__makeOutput(void );
1028          //#line 30
1029          static void HplMcs51GeneralIOC__P13__clr(void );
1030          static void HplMcs51GeneralIOC__P10__toggle(void );
1031          
C51 COMPILER V8.09   APP                                                                   09/19/2014 21:48:16 PAGE 18  

1032          
1033          
1034          static void HplMcs51GeneralIOC__P10__makeOutput(void );
1035          //#line 29
1036          static void HplMcs51GeneralIOC__P10__set(void );
1037          static void HplMcs51GeneralIOC__P10__clr(void );
1038          static void /*PlatformLedsC.Led0_rev*/ReverseGPIOP__0__Out__toggle(void );
1039          
1040          
1041          
1042          static void /*PlatformLedsC.Led0_rev*/ReverseGPIOP__0__Out__makeOutput(void );
1043          //#line 29
1044          static void /*PlatformLedsC.Led0_rev*/ReverseGPIOP__0__Out__set(void );
1045          static void /*PlatformLedsC.Led0_rev*/ReverseGPIOP__0__Out__clr(void );
1046          static void /*PlatformLedsC.Led2_rev*/ReverseGPIOP__1__Out__toggle(void );
1047          
1048          
1049          
1050          static void /*PlatformLedsC.Led2_rev*/ReverseGPIOP__1__Out__makeOutput(void );
1051          //#line 29
1052          static void /*PlatformLedsC.Led2_rev*/ReverseGPIOP__1__Out__set(void );
1053          
1054          static void /*PlatformLedsC.NoPinC*/NoPinC__0__GeneralIO__toggle(void );
1055          
1056          
1057          
1058          static void /*PlatformLedsC.NoPinC*/NoPinC__0__GeneralIO__makeOutput(void );
1059          //#line 29
1060          static void /*PlatformLedsC.NoPinC*/NoPinC__0__GeneralIO__set(void );
1061          //# 51 "/opt/tinyos-2.x/tos/interfaces/Init.nc"
1062          static error_t HalCC2430SimpleUartP__Init__init(void );
1063          //# 41 "/opt/tinyos-2.x/tos/lib/serial/SerialByteComm.nc"
1064          static error_t HalCC2430SimpleUartP__uart0__put(uint8_t _data);
1065          //# 51 "/opt/tinyos-2.x/tos/interfaces/Init.nc"
1066          static error_t PlatformP__LedsInit__init(void );
1067          //# 48 "/opt/tinyos-2.x-contrib/diku/mcs51/tos/platforms/cc2430em/PlatformP.nc"
1068          static  /*inline*/  error_t PlatformP__Init__init(void );
1069          //# 51 "/opt/tinyos-2.x/tos/interfaces/Init.nc"
1070          static error_t RealMainP__SoftwareInit__init(void );
1071          //# 49 "/opt/tinyos-2.x/tos/interfaces/Boot.nc"
1072          static void RealMainP__Boot__booted(void );
1073          //# 51 "/opt/tinyos-2.x/tos/interfaces/Init.nc"
1074          static error_t RealMainP__PlatformInit__init(void );
1075          //# 46 "/opt/tinyos-2.x/tos/interfaces/Scheduler.nc"
1076          static void RealMainP__Scheduler__init(void );
1077          //#line 61
1078          static void RealMainP__Scheduler__taskLoop(void );
1079          //#line 54
1080          static bool RealMainP__Scheduler__runNextTask(void );
1081          //# 52 "/opt/tinyos-2.x/tos/system/RealMainP.nc"
1082          int main(void )   ;
1083          //# 64 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
1084          static void SchedulerBasicP__TaskBasic__runTask(
1085          //# 45 "/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc"
1086          uint8_t arg_0x7ef72230);
1087          //# 59 "/opt/tinyos-2.x/tos/interfaces/McuSleep.nc"
1088          static void SchedulerBasicP__McuSleep__sleep(void );
1089          //# 50 "/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc"
1090          enum SchedulerBasicP____nesc_unnamed4273 {
1091          
1092            SchedulerBasicP__NUM_TASKS = 1U, 
1093            SchedulerBasicP__NO_TASK = 255
C51 COMPILER V8.09   APP                                                                   09/19/2014 21:48:16 PAGE 19  

1094          };
1095          
1096          uint8_t SchedulerBasicP__m_head;
1097          uint8_t SchedulerBasicP__m_tail;
1098          uint8_t SchedulerBasicP__m_next[SchedulerBasicP__NUM_TASKS];
1099          
1100          
1101          
1102          
1103          
1104          
1105          
1106          
1107          static   /*inline*/   uint8_t SchedulerBasicP__popTask(void );
1108          //#line 86
1109          static  /*inline*/  bool SchedulerBasicP__isWaiting(uint8_t id);
1110          
1111          
1112          
1113          
1114          static  /*inline*/  bool SchedulerBasicP__pushTask(uint8_t id);
1115          //#line 113
1116          static  /*inline*/  void SchedulerBasicP__Scheduler__init(void );
1117          
1118          
1119          
1120          
1121          
1122          
1123          
1124          
1125          
1126          static bool SchedulerBasicP__Scheduler__runNextTask(void );
1127          //#line 138
1128          static  /*inline*/  void SchedulerBasicP__Scheduler__taskLoop(void );
1129          //#line 159
1130          static  /*inline*/  error_t SchedulerBasicP__TaskBasic__postTask(uint8_t id);
1131          
1132          
1133          
1134          
1135          static  /*inline*/  void SchedulerBasicP__TaskBasic__default__runTask(uint8_t id);
1136          //# 51 "/opt/tinyos-2.x-contrib/diku/mcs51/tos/chips/cc2430/McuSleepC.nc"
1137          static  /*inline*/  void McuSleepC__McuSleep__sleep(void );
1138          //# 56 "/opt/tinyos-2.x/tos/interfaces/Leds.nc"
1139          static void EchoP__Leds__led0Toggle(void );
1140          //#line 72
1141          static void EchoP__Leds__led1Toggle(void );
1142          //#line 89
1143          static void EchoP__Leds__led2Toggle(void );
1144          //#line 45
1145          static void EchoP__Leds__led0On(void );
1146          //# 56 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
1147          static error_t EchoP__print__postTask(void );
1148          //# 41 "/opt/tinyos-2.x/tos/lib/serial/SerialByteComm.nc"
1149          static error_t EchoP__uart0__put(uint8_t _data);
1150          //# 64 "EchoP.nc"
1151          enum EchoP____nesc_unnamed4274 {
1152          //#line 64
1153            EchoP__print = 0U
1154          };
1155          //#line 64
C51 COMPILER V8.09   APP                                                                   09/19/2014 21:48:16 PAGE 20  

1156          typedef int EchoP____nesc_sillytask_print[];
1157          //#line 50
1158          char EchoP__buf = 'A';
1159          
1160          
1161          
1162          
1163          
1164          static  /*inline*/  void EchoP__Boot__booted(void );
1165          
1166          
1167          
1168          
1169          static  /*inline*/  void EchoP__uart0__putDone(void );
1170          
1171          
1172          static  /*inline*/  void EchoP__print__runTask(void );
1173          
1174          
1175          
1176          static  /*inline*/  void EchoP__uart0__get(uint8_t _data);
1177          //# 31 "/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc"
1178          static void LedsP__Led0__toggle(void );
1179          
1180          
1181          
1182          static void LedsP__Led0__makeOutput(void );
1183          //#line 29
1184          static void LedsP__Led0__set(void );
1185          static void LedsP__Led0__clr(void );
1186          static void LedsP__Led1__toggle(void );
1187          
1188          
1189          
1190          static void LedsP__Led1__makeOutput(void );
1191          //#line 29
1192          static void LedsP__Led1__set(void );
1193          
1194          static void LedsP__Led2__toggle(void );
1195          
1196          
1197          
1198          static void LedsP__Led2__makeOutput(void );
1199          //#line 29
1200          static void LedsP__Led2__set(void );
1201          //# 45 "/opt/tinyos-2.x/tos/system/LedsP.nc"
1202          static  /*inline*/  error_t LedsP__Init__init(void );
1203          //#line 63
1204          static  /*inline*/  void LedsP__Leds__led0On(void );
1205          
1206          
1207          
1208          
1209          
1210          
1211          
1212          
1213          
1214          static  /*inline*/  void LedsP__Leds__led0Toggle(void );
1215          //#line 88
1216          static  /*inline*/  void LedsP__Leds__led1Toggle(void );
1217          //#line 103
C51 COMPILER V8.09   APP                                                                   09/19/2014 21:48:16 PAGE 21  

1218          static  /*inline*/  void LedsP__Leds__led2Toggle(void );
1219          //# 92 "/opt/tinyos-2.x-contrib/diku/mcs51/tos/chips/mcs51/pins/HplMcs51GeneralIOC.nc"
1220          static   /*inline*/   void HplMcs51GeneralIOC__P10__set(void );
1221          //#line 92
1222          static   /*inline*/   void HplMcs51GeneralIOC__P10__clr(void );
1223          //#line 92
1224          static  /*inline*/  void HplMcs51GeneralIOC__P10__toggle(void );
1225          //#line 92
1226          static   /*inline*/   void HplMcs51GeneralIOC__P10__makeOutput(void );
1227          
1228          
1229          static   /*inline*/   void HplMcs51GeneralIOC__P13__clr(void );
1230          //#line 95
1231          static  /*inline*/  void HplMcs51GeneralIOC__P13__toggle(void );
1232          //#line 95
1233          static   /*inline*/   void HplMcs51GeneralIOC__P13__makeOutput(void );
1234          //# 31 "/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc"
1235          static void /*PlatformLedsC.Led0_rev*/ReverseGPIOP__0__In__toggle(void );
1236          
1237          
1238          
1239          static void /*PlatformLedsC.Led0_rev*/ReverseGPIOP__0__In__makeOutput(void );
1240          //#line 29
1241          static void /*PlatformLedsC.Led0_rev*/ReverseGPIOP__0__In__set(void );
1242          static void /*PlatformLedsC.Led0_rev*/ReverseGPIOP__0__In__clr(void );
1243          //# 59 "/opt/tinyos-2.x-contrib/diku/common/lib/ReverseGPIOP.nc"
1244          static   /*inline*/   void /*PlatformLedsC.Led0_rev*/ReverseGPIOP__0__Out__set(void );
1245          //#line 59
1246          static   /*inline*/   void /*PlatformLedsC.Led0_rev*/ReverseGPIOP__0__Out__clr(void );
1247          //#line 59
1248          static  /*inline*/  void /*PlatformLedsC.Led0_rev*/ReverseGPIOP__0__Out__toggle(void );
1249          //#line 59
1250          static   /*inline*/   void /*PlatformLedsC.Led0_rev*/ReverseGPIOP__0__Out__makeOutput(void );
1251          //# 31 "/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc"
1252          static void /*PlatformLedsC.Led2_rev*/ReverseGPIOP__1__In__toggle(void );
1253          
1254          
1255          
1256          static void /*PlatformLedsC.Led2_rev*/ReverseGPIOP__1__In__makeOutput(void );
1257          //#line 30
1258          static void /*PlatformLedsC.Led2_rev*/ReverseGPIOP__1__In__clr(void );
1259          //# 59 "/opt/tinyos-2.x-contrib/diku/common/lib/ReverseGPIOP.nc"
1260          static   /*inline*/   void /*PlatformLedsC.Led2_rev*/ReverseGPIOP__1__Out__set(void );
1261          //#line 59
1262          static  /*inline*/  void /*PlatformLedsC.Led2_rev*/ReverseGPIOP__1__Out__toggle(void );
1263          //#line 59
1264          static   /*inline*/   void /*PlatformLedsC.Led2_rev*/ReverseGPIOP__1__Out__makeOutput(void );
1265          //# 23 "/opt/tinyos-2.x/tos/system/NoPinC.nc"
1266          static  /*inline*/  void /*PlatformLedsC.NoPinC*/NoPinC__0__GeneralIO__set(void );
1267          
1268          static  /*inline*/  void /*PlatformLedsC.NoPinC*/NoPinC__0__GeneralIO__toggle(void );
1269          
1270          static  /*inline*/  void /*PlatformLedsC.NoPinC*/NoPinC__0__GeneralIO__makeOutput(void );
1271          //# 47 "/opt/tinyos-2.x/tos/lib/serial/SerialByteComm.nc"
1272          static void HalCC2430SimpleUartP__uart0__get(uint8_t _data);
1273          
1274          
1275          
1276          
1277          
1278          static void HalCC2430SimpleUartP__uart0__putDone(void );
1279          //# 50 "/opt/tinyos-2.x-contrib/diku/mcs51/tos/chips/cc2430/usart/HalCC2430SimpleUartP.nc"
C51 COMPILER V8.09   APP                                                                   09/19/2014 21:48:16 PAGE 22  

1280          static  /*inline*/  error_t HalCC2430SimpleUartP__Init__init(void );
1281          //#line 130
1282          static  /*inline*/  error_t HalCC2430SimpleUartP__uart0__put(uint8_t _data);
1283          
1284          
1285          
1286          
1287          void __vector_2(void )   /*__attribute((interrupt))*/ ;
1288          //#line 154
1289          void __vector_7(void )   /*__attribute((interrupt))*/ ;
1290          //# 107 "/opt/tinyos-2.x-contrib/diku/mcs51/tos/chips/mcs51/mcs51hardware.h"
1291            /*inline*/    __nesc_atomic_t __nesc_atomic_start(void )
1292          //#line 107
1293          {
1294   1        __nesc_atomic_t tmp = EA;
1295   1      
1296   1      //#line 109
1297   1        EA = 0;
1298   1        return tmp;
1299   1      }
1300          
1301            /*inline*/    void __nesc_atomic_end(__nesc_atomic_t oldSreg)
1302          //#line 113
1303          {
1304   1        EA = oldSreg;
1305   1      }
1306          
1307          //# 113 "/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc"
1308          static  /*inline*/  void SchedulerBasicP__Scheduler__init(void )
1309          {
1310   1        /* atomic removed: atomic calls only */
1311   1        {
1312   2          memset((void *)SchedulerBasicP__m_next, SchedulerBasicP__NO_TASK, sizeof SchedulerBasicP__m_next);
1313   2          SchedulerBasicP__m_head = SchedulerBasicP__NO_TASK;
1314   2          SchedulerBasicP__m_tail = SchedulerBasicP__NO_TASK;
1315   2        }
1316   1      }
1317          
1318          //# 46 "/opt/tinyos-2.x/tos/interfaces/Scheduler.nc"
1319           /*inline*/  static void RealMainP__Scheduler__init(void ){
1320   1      //#line 46
1321   1        SchedulerBasicP__Scheduler__init();
1322   1      //#line 46
1323   1      }
1324          //#line 46
1325          //# 95 "/opt/tinyos-2.x-contrib/diku/mcs51/tos/chips/mcs51/pins/HplMcs51GeneralIOC.nc"
1326          static   /*inline*/   void HplMcs51GeneralIOC__P13__clr(void )
1327          //#line 95
1328          {
1329   1      //#line 95
1330   1        P1_3 = 0;
1331   1      }
1332          
1333          //# 30 "/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc"
1334           /*inline*/  static void /*PlatformLedsC.Led2_rev*/ReverseGPIOP__1__In__clr(void ){
1335   1      //#line 30
1336   1        HplMcs51GeneralIOC__P13__clr();
1337   1      //#line 30
1338   1      }
1339          //#line 30
1340          //# 59 "/opt/tinyos-2.x-contrib/diku/common/lib/ReverseGPIOP.nc"
1341          static   /*inline*/   void /*PlatformLedsC.Led2_rev*/ReverseGPIOP__1__Out__set(void )
C51 COMPILER V8.09   APP                                                                   09/19/2014 21:48:16 PAGE 23  

1342          //#line 59
1343          {
1344   1      //#line 59
1345   1        /*PlatformLedsC.Led2_rev*/ReverseGPIOP__1__In__clr();
1346   1      }
1347          
1348          //# 29 "/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc"
1349           /*inline*/  static void LedsP__Led2__set(void ){
1350   1      //#line 29
1351   1        /*PlatformLedsC.Led2_rev*/ReverseGPIOP__1__Out__set();
1352   1      //#line 29
1353   1      }
1354          //#line 29
1355          //# 23 "/opt/tinyos-2.x/tos/system/NoPinC.nc"
1356          static  /*inline*/  void /*PlatformLedsC.NoPinC*/NoPinC__0__GeneralIO__set(void )
1357          //#line 23
1358          {
1359   1      }
1360          
1361          //# 29 "/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc"
1362           /*inline*/  static void LedsP__Led1__set(void ){
1363   1      //#line 29
1364   1        /*PlatformLedsC.NoPinC*/NoPinC__0__GeneralIO__set();
1365   1      //#line 29
1366   1      }
1367          //#line 29
1368          //# 92 "/opt/tinyos-2.x-contrib/diku/mcs51/tos/chips/mcs51/pins/HplMcs51GeneralIOC.nc"
1369          static   /*inline*/   void HplMcs51GeneralIOC__P10__clr(void )
1370          //#line 92
1371          {
1372   1      //#line 92
1373   1        P1_0 = 0;
1374   1      }
1375          
1376          //# 30 "/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc"
1377           /*inline*/  static void /*PlatformLedsC.Led0_rev*/ReverseGPIOP__0__In__clr(void ){
1378   1      //#line 30
1379   1        HplMcs51GeneralIOC__P10__clr();
1380   1      //#line 30
1381   1      }
1382          //#line 30
1383          //# 59 "/opt/tinyos-2.x-contrib/diku/common/lib/ReverseGPIOP.nc"
1384          static   /*inline*/   void /*PlatformLedsC.Led0_rev*/ReverseGPIOP__0__Out__set(void )
1385          //#line 59
1386          {
1387   1      //#line 59
1388   1        /*PlatformLedsC.Led0_rev*/ReverseGPIOP__0__In__clr();
1389   1      }
1390          
1391          //# 29 "/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc"
1392           /*inline*/  static void LedsP__Led0__set(void ){
1393   1      //#line 29
1394   1        /*PlatformLedsC.Led0_rev*/ReverseGPIOP__0__Out__set();
1395   1      //#line 29
1396   1      }
1397          //#line 29
1398          //# 95 "/opt/tinyos-2.x-contrib/diku/mcs51/tos/chips/mcs51/pins/HplMcs51GeneralIOC.nc"
1399          static   /*inline*/   void HplMcs51GeneralIOC__P13__makeOutput(void )
1400          //#line 95
1401          {
1402   1      //#line 95
1403   1        P1_DIR |= 1 << 3;
C51 COMPILER V8.09   APP                                                                   09/19/2014 21:48:16 PAGE 24  

1404   1      }
1405          
1406          //# 35 "/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc"
1407           /*inline*/  static void /*PlatformLedsC.Led2_rev*/ReverseGPIOP__1__In__makeOutput(void ){
1408   1      //#line 35
1409   1        HplMcs51GeneralIOC__P13__makeOutput();
1410   1      //#line 35
1411   1      }
1412          //#line 35
1413          //# 59 "/opt/tinyos-2.x-contrib/diku/common/lib/ReverseGPIOP.nc"
1414          static   /*inline*/   void /*PlatformLedsC.Led2_rev*/ReverseGPIOP__1__Out__makeOutput(void )
1415          //#line 59
1416          {
1417   1      //#line 59
1418   1        /*PlatformLedsC.Led2_rev*/ReverseGPIOP__1__In__makeOutput();
1419   1      }
1420          
1421          //# 35 "/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc"
1422           /*inline*/  static void LedsP__Led2__makeOutput(void ){
1423   1      //#line 35
1424   1        /*PlatformLedsC.Led2_rev*/ReverseGPIOP__1__Out__makeOutput();
1425   1      //#line 35
1426   1      }
1427          //#line 35
1428          //# 27 "/opt/tinyos-2.x/tos/system/NoPinC.nc"
1429          static  /*inline*/  void /*PlatformLedsC.NoPinC*/NoPinC__0__GeneralIO__makeOutput(void )
1430          //#line 27
1431          {
1432   1      }
1433          
1434          //# 35 "/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc"
1435           /*inline*/  static void LedsP__Led1__makeOutput(void ){
1436   1      //#line 35
1437   1        /*PlatformLedsC.NoPinC*/NoPinC__0__GeneralIO__makeOutput();
1438   1      //#line 35
1439   1      }
1440          //#line 35
1441          //# 92 "/opt/tinyos-2.x-contrib/diku/mcs51/tos/chips/mcs51/pins/HplMcs51GeneralIOC.nc"
1442          static   /*inline*/   void HplMcs51GeneralIOC__P10__makeOutput(void )
1443          //#line 92
1444          {
1445   1      //#line 92
1446   1        P1_DIR |= 1 << 0;
1447   1      }
1448          
1449          //# 35 "/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc"
1450           /*inline*/  static void /*PlatformLedsC.Led0_rev*/ReverseGPIOP__0__In__makeOutput(void ){
1451   1      //#line 35
1452   1        HplMcs51GeneralIOC__P10__makeOutput();
1453   1      //#line 35
1454   1      }
1455          //#line 35
1456          //# 59 "/opt/tinyos-2.x-contrib/diku/common/lib/ReverseGPIOP.nc"
1457          static   /*inline*/   void /*PlatformLedsC.Led0_rev*/ReverseGPIOP__0__Out__makeOutput(void )
1458          //#line 59
1459          {
1460   1      //#line 59
1461   1        /*PlatformLedsC.Led0_rev*/ReverseGPIOP__0__In__makeOutput();
1462   1      }
1463          
1464          //# 35 "/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc"
1465           /*inline*/  static void LedsP__Led0__makeOutput(void ){
C51 COMPILER V8.09   APP                                                                   09/19/2014 21:48:16 PAGE 25  

1466   1      //#line 35
1467   1        /*PlatformLedsC.Led0_rev*/ReverseGPIOP__0__Out__makeOutput();
1468   1      //#line 35
1469   1      }
1470          //#line 35
1471          //# 45 "/opt/tinyos-2.x/tos/system/LedsP.nc"
1472          static  /*inline*/  error_t LedsP__Init__init(void )
1473          //#line 45
1474          {
1475   1        /* atomic removed: atomic calls only */
1476   1      //#line 46
1477   1        {
1478   2          ;
1479   2          LedsP__Led0__makeOutput();
1480   2          LedsP__Led1__makeOutput();
1481   2          LedsP__Led2__makeOutput();
1482   2          LedsP__Led0__set();
1483   2          LedsP__Led1__set();
1484   2          LedsP__Led2__set();
1485   2        }
1486   1        return SUCCESS;
1487   1      }
1488          
1489          //# 51 "/opt/tinyos-2.x/tos/interfaces/Init.nc"
1490           /*inline*/  static error_t PlatformP__LedsInit__init(void ){
1491   1      //#line 51
1492   1        unsigned char result;
1493   1      //#line 51
1494   1      
1495   1      //#line 51
1496   1        result = LedsP__Init__init();
1497   1      //#line 51
1498   1      
1499   1      //#line 51
1500   1        return result;
1501   1      //#line 51
1502   1      }
1503          //#line 51
1504          //# 48 "/opt/tinyos-2.x-contrib/diku/mcs51/tos/platforms/cc2430em/PlatformP.nc"
1505          static  /*inline*/  error_t PlatformP__Init__init(void )
1506          //#line 48
1507          {
1508   1        uint8_t new_clkcon;
1509   1      
1510   1      //#line 88
1511   1        SLEEP = (SLEEP & ~CC2430_SLEEP_MODE_MASK) | CC2430_SLEEP_POWERMODE_0;
1512   1      
1513   1      
1514   1      
1515   1        SLEEP &= ~(1 << CC2430_SLEEP_OSC_PD);
1516   1        while (!(SLEEP & (1 << CC2430_SLEEP_XOSC_STB))) ;
1517   1      
1518   1        new_clkcon = 0x0;
1519   1      
1520   1        new_clkcon = (new_clkcon & ~CC2430_CLKCON_TICKSPD_MASK) | CC2430_TICKF_DIV_1;
1521   1      
1522   1      
1523   1        new_clkcon &= ~(1 << CC2430_CLKCON_OSC32K);
1524   1      
1525   1      
1526   1      
1527   1      
C51 COMPILER V8.09   APP                                                                   09/19/2014 21:48:16 PAGE 26  

1528   1      
1529   1      
1530   1        new_clkcon &= ~(1 << CC2430_CLKCON_OSC);
1531   1      
1532   1        new_clkcon |= 1 << CC2430_CLKCON_TICKSPD;
1533   1      
1534   1        CLKCON = new_clkcon;
1535   1      //#line 137
1536   1        PlatformP__LedsInit__init();
1537   1        return SUCCESS;
1538   1      }
1539          
1540          //# 51 "/opt/tinyos-2.x/tos/interfaces/Init.nc"
1541           /*inline*/  static error_t RealMainP__PlatformInit__init(void ){
1542   1      //#line 51
1543   1        unsigned char result;
1544   1      //#line 51
1545   1      
1546   1      //#line 51
1547   1        result = PlatformP__Init__init();
1548   1      //#line 51
1549   1      
1550   1      //#line 51
1551   1        return result;
1552   1      //#line 51
1553   1      }
1554          //#line 51
1555          //# 54 "/opt/tinyos-2.x/tos/interfaces/Scheduler.nc"
1556           /*inline*/  static bool RealMainP__Scheduler__runNextTask(void ){
1557   1      //#line 54
1558   1        unsigned char result;
1559   1      //#line 54
1560   1      
1561   1      //#line 54
1562   1        result = SchedulerBasicP__Scheduler__runNextTask();
1563   1      //#line 54
1564   1      
1565   1      //#line 54
1566   1        return result;
1567   1      //#line 54
1568   1      }
1569          //#line 54
1570          //# 50 "/opt/tinyos-2.x-contrib/diku/mcs51/tos/chips/cc2430/usart/HalCC2430SimpleUartP.nc"
1571          static  /*inline*/  error_t HalCC2430SimpleUartP__Init__init(void )
1572          //#line 50
1573          {
1574   1      //#line 92
1575   1        PERCFG &= ~0x1u;
1576   1      //#line 105
1577   1        P0_ALT |= 0x0Cu;
1578   1      
1579   1      
1580   1      
1581   1      
1582   1        U0GCR = 57600 == 2400 ? 6 + ((CLKCON & (1 << CC2430_CLKCON_OSC)) >> CC2430_CLKCON_OSC) : 57600 == 4800 ?
             - 7 + ((CLKCON & (1 << CC2430_CLKCON_OSC)) >> CC2430_CLKCON_OSC) : 57600 == 9600 ? 8 + ((CLKCON & (1 << CC2430_CLKCON_OSC
             -)) >> CC2430_CLKCON_OSC) : 57600 == 14400 ? 8 + ((CLKCON & (1 << CC2430_CLKCON_OSC)) >> CC2430_CLKCON_OSC) : 57600 == 19
             -200 ? 9 + ((CLKCON & (1 << CC2430_CLKCON_OSC)) >> CC2430_CLKCON_OSC) : 57600 == 28800 ? 9 + ((CLKCON & (1 << CC2430_CLKC
             -ON_OSC)) >> CC2430_CLKCON_OSC) : 57600 == 38400 ? 10 + ((CLKCON & (1 << CC2430_CLKCON_OSC)) >> CC2430_CLKCON_OSC) : 5760
             -0 == 57600 ? 10 + ((CLKCON & (1 << CC2430_CLKCON_OSC)) >> CC2430_CLKCON_OSC) : 57600 == 76800 ? 11 + ((CLKCON & (1 << CC
             -2430_CLKCON_OSC)) >> CC2430_CLKCON_OSC) : 57600 == 115200 ? 11 + ((CLKCON & (1 << CC2430_CLKCON_OSC)) >> CC2430_CLKCON_O
             -SC) : 57600 == 153600 ? 12 + ((CLKCON & (1 << CC2430_CLKCON_OSC)) >> CC2430_CLKCON_OSC) : 57600 == 230400 ? 12 + ((CLKCO
C51 COMPILER V8.09   APP                                                                   09/19/2014 21:48:16 PAGE 27  

             -N & (1 << CC2430_CLKCON_OSC)) >> CC2430_CLKCON_OSC) : 57600 == 307200 ? 13 + ((CLKCON & (1 << CC2430_CLKCON_OSC)) >> CC2
             -430_CLKCON_OSC) : 0;
1583   1      
1584   1      
1585   1        U0BAUD = 57600 == 2400 ? 59 : 57600 == 4800 ? 59 : 57600 == 9600 ? 59 : 57600 == 14400 ? 216 : 57600 == 
             -19200 ? 59 : 57600 == 28800 ? 216 : 57600 == 38400 ? 59 : 57600 == 57600 ? 216 : 57600 == 76800 ? 59 : 57600 == 115200 ?
             - 216 : 57600 == 153600 ? 59 : 57600 == 230400 ? 216 : 57600 == 307200 ? 59 : 0;
1586   1      
1587   1        U0CSR |= 0x80u | 0x40u;
1588   1        U0UCR |= 0x2u | 0x80u;
1589   1      
1590   1      
1591   1        UTX0IF = 0;
1592   1        URX0IF = 0;
1593   1      
1594   1        URX0IE = 1;
1595   1      
1596   1      
1597   1        IEN2 |= 1 << 2;
1598   1      
1599   1        return SUCCESS;
1600   1      }
1601          
1602          //# 51 "/opt/tinyos-2.x/tos/interfaces/Init.nc"
1603           /*inline*/  static error_t RealMainP__SoftwareInit__init(void ){
1604   1      //#line 51
1605   1        unsigned char result;
1606   1      //#line 51
1607   1      
1608   1      //#line 51
1609   1        result = HalCC2430SimpleUartP__Init__init();
1610   1      //#line 51
1611   1      
1612   1      //#line 51
1613   1        return result;
1614   1      //#line 51
1615   1      }
1616          //#line 51
1617          //# 130 "/opt/tinyos-2.x-contrib/diku/mcs51/tos/chips/cc2430/usart/HalCC2430SimpleUartP.nc"
1618          static  /*inline*/  error_t HalCC2430SimpleUartP__uart0__put(uint8_t _data)
1619          //#line 130
1620          {
1621   1        U0BUF = _data;
1622   1        return SUCCESS;
1623   1      }
1624          
1625          //# 41 "/opt/tinyos-2.x/tos/lib/serial/SerialByteComm.nc"
1626           /*inline*/  static error_t EchoP__uart0__put(uint8_t _data){
1627   1      //#line 41
1628   1        unsigned char result;
1629   1      //#line 41
1630   1      
1631   1      //#line 41
1632   1        result = HalCC2430SimpleUartP__uart0__put(_data);
1633   1      //#line 41
1634   1      
1635   1      //#line 41
1636   1        return result;
1637   1      //#line 41
1638   1      }
1639          //#line 41
1640          //# 92 "/opt/tinyos-2.x-contrib/diku/mcs51/tos/chips/mcs51/pins/HplMcs51GeneralIOC.nc"
C51 COMPILER V8.09   APP                                                                   09/19/2014 21:48:16 PAGE 28  

1641          static   /*inline*/   void HplMcs51GeneralIOC__P10__set(void )
1642          //#line 92
1643          {
1644   1      //#line 92
1645   1        P1_0 = 1;
1646   1      }
1647          
1648          //# 29 "/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc"
1649           /*inline*/  static void /*PlatformLedsC.Led0_rev*/ReverseGPIOP__0__In__set(void ){
1650   1      //#line 29
1651   1        HplMcs51GeneralIOC__P10__set();
1652   1      //#line 29
1653   1      }
1654          //#line 29
1655          //# 59 "/opt/tinyos-2.x-contrib/diku/common/lib/ReverseGPIOP.nc"
1656          static   /*inline*/   void /*PlatformLedsC.Led0_rev*/ReverseGPIOP__0__Out__clr(void )
1657          //#line 59
1658          {
1659   1      //#line 59
1660   1        /*PlatformLedsC.Led0_rev*/ReverseGPIOP__0__In__set();
1661   1      }
1662          
1663          //# 30 "/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc"
1664           /*inline*/  static void LedsP__Led0__clr(void ){
1665   1      //#line 30
1666   1        /*PlatformLedsC.Led0_rev*/ReverseGPIOP__0__Out__clr();
1667   1      //#line 30
1668   1      }
1669          //#line 30
1670          //# 63 "/opt/tinyos-2.x/tos/system/LedsP.nc"
1671          static  /*inline*/  void LedsP__Leds__led0On(void )
1672          //#line 63
1673          {
1674   1        LedsP__Led0__clr();
1675   1        ;
1676   1      //#line 65
1677   1        ;
1678   1      }
1679          
1680          //# 45 "/opt/tinyos-2.x/tos/interfaces/Leds.nc"
1681           /*inline*/  static void EchoP__Leds__led0On(void ){
1682   1      //#line 45
1683   1        LedsP__Leds__led0On();
1684   1      //#line 45
1685   1      }
1686          //#line 45
1687          //# 56 "EchoP.nc"
1688          static  /*inline*/  void EchoP__Boot__booted(void )
1689          //#line 56
1690          {
1691   1        EchoP__Leds__led0On();
1692   1        EchoP__uart0__put(EchoP__buf);
1693   1      }
1694          
1695          //# 49 "/opt/tinyos-2.x/tos/interfaces/Boot.nc"
1696           /*inline*/  static void RealMainP__Boot__booted(void ){
1697   1      //#line 49
1698   1        EchoP__Boot__booted();
1699   1      //#line 49
1700   1      }
1701          //#line 49
1702          //# 64 "EchoP.nc"
C51 COMPILER V8.09   APP                                                                   09/19/2014 21:48:16 PAGE 29  

1703          static  /*inline*/  void EchoP__print__runTask(void )
1704          //#line 64
1705          {
1706   1        EchoP__uart0__put(EchoP__buf);
1707   1      }
1708          
1709          //# 164 "/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc"
1710          static  /*inline*/  void SchedulerBasicP__TaskBasic__default__runTask(uint8_t id)
1711          {
1712   1      }
*** WARNING C280 IN LINE 1710 OF APP.C: 'id': unreferenced local variable
1713          
1714          //# 64 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
1715           /*inline*/  static void SchedulerBasicP__TaskBasic__runTask(uint8_t arg_0x7ef72230){
1716   1      //#line 64
1717   1        switch (arg_0x7ef72230) {
1718   2      //#line 64
1719   2          case EchoP__print:
1720   2      //#line 64
1721   2            EchoP__print__runTask();
1722   2      //#line 64
1723   2            break;
1724   2      //#line 64
1725   2          default:
1726   2      //#line 64
1727   2            SchedulerBasicP__TaskBasic__default__runTask(arg_0x7ef72230);
1728   2      //#line 64
1729   2            break;
1730   2      //#line 64
1731   2          }
1732   1      //#line 64
1733   1      }
1734          //#line 64
1735          //# 104 "/opt/tinyos-2.x-contrib/diku/mcs51/tos/chips/mcs51/mcs51hardware.h"
1736          static   /*inline*/   void __nesc_disable_interrupt()
1737          //#line 104
1738          {
1739   1      //#line 104
1740   1        EA = 0;
1741   1      }
1742          
1743          //#line 105
1744          static   /*inline*/   void __nesc_enable_interrupt()
1745          //#line 105
1746          {
1747   1      //#line 105
1748   1        EA = 1;
1749   1      }
1750          
1751          //# 51 "/opt/tinyos-2.x-contrib/diku/mcs51/tos/chips/cc2430/McuSleepC.nc"
1752          static  /*inline*/  void McuSleepC__McuSleep__sleep(void )
1753          //#line 51
1754          {
1755   1      
1756   1        __nesc_enable_interrupt();
1757   1      
1758   1      
1759   1      
1760   1      
1761   1      
1762   1      
1763   1        SLEEP = (SLEEP & ~CC2430_SLEEP_MODE_MASK) | CC2430_SLEEP_POWERMODE_0;
C51 COMPILER V8.09   APP                                                                   09/19/2014 21:48:16 PAGE 30  

1764   1      
1765   1        __nesc_disable_interrupt();
1766   1      }
1767          
1768          //# 59 "/opt/tinyos-2.x/tos/interfaces/McuSleep.nc"
1769           /*inline*/  static void SchedulerBasicP__McuSleep__sleep(void ){
1770   1      //#line 59
1771   1        McuSleepC__McuSleep__sleep();
1772   1      //#line 59
1773   1      }
1774          //#line 59
1775          //# 67 "/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc"
1776          static   /*inline*/   uint8_t SchedulerBasicP__popTask(void )
1777          {
1778   1        if (SchedulerBasicP__m_head != SchedulerBasicP__NO_TASK) 
1779   1          {
1780   2            uint8_t id = SchedulerBasicP__m_head;
1781   2      
1782   2      //#line 72
1783   2            SchedulerBasicP__m_head = SchedulerBasicP__m_next[SchedulerBasicP__m_head];
1784   2            if (SchedulerBasicP__m_head == SchedulerBasicP__NO_TASK) 
1785   2              {
1786   3                SchedulerBasicP__m_tail = SchedulerBasicP__NO_TASK;
1787   3              }
1788   2            SchedulerBasicP__m_next[id] = SchedulerBasicP__NO_TASK;
1789   2            return id;
1790   2          }
1791   1        else 
1792   1          {
1793   2            return SchedulerBasicP__NO_TASK;
1794   2          }
1795   1      }
1796          
1797          //#line 138
1798          static  /*inline*/  void SchedulerBasicP__Scheduler__taskLoop(void )
1799          {
1800   1        for (; ; ) 
1801   1          {
1802   2            uint8_t nextTask;
1803   2      
1804   2            { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
1805   3              {
1806   4                while ((nextTask = SchedulerBasicP__popTask()) == SchedulerBasicP__NO_TASK) 
1807   4                  {
1808   5                    SchedulerBasicP__McuSleep__sleep();
1809   5                  }
1810   4              }
1811   3      //#line 150
1812   3              __nesc_atomic_end(__nesc_atomic); }
1813   2            SchedulerBasicP__TaskBasic__runTask(nextTask);
1814   2          }
1815   1      }
1816          
1817          //# 61 "/opt/tinyos-2.x/tos/interfaces/Scheduler.nc"
1818           /*inline*/  static void RealMainP__Scheduler__taskLoop(void ){
1819   1      //#line 61
1820   1        SchedulerBasicP__Scheduler__taskLoop();
1821   1      //#line 61
1822   1      }
1823          //#line 61
1824          //# 86 "/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc"
1825          static  /*inline*/  bool SchedulerBasicP__isWaiting(uint8_t id)
C51 COMPILER V8.09   APP                                                                   09/19/2014 21:48:16 PAGE 31  

1826          {
1827   1        return SchedulerBasicP__m_next[id] != SchedulerBasicP__NO_TASK || SchedulerBasicP__m_tail == id;
1828   1      }
1829          
1830          static  /*inline*/  bool SchedulerBasicP__pushTask(uint8_t id)
1831          {
1832   1        if (!SchedulerBasicP__isWaiting(id)) 
1833   1          {
1834   2            if (SchedulerBasicP__m_head == SchedulerBasicP__NO_TASK) 
1835   2              {
1836   3                SchedulerBasicP__m_head = id;
1837   3                SchedulerBasicP__m_tail = id;
1838   3              }
1839   2            else 
1840   2              {
1841   3                SchedulerBasicP__m_next[SchedulerBasicP__m_tail] = id;
1842   3                SchedulerBasicP__m_tail = id;
1843   3              }
1844   2            return TRUE;
1845   2          }
1846   1        else 
1847   1          {
1848   2            return FALSE;
1849   2          }
1850   1      }
1851          
1852          //#line 159
1853          static  /*inline*/  error_t SchedulerBasicP__TaskBasic__postTask(uint8_t id)
1854          {
1855   1        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
1856   2      //#line 161
1857   2          {
1858   3      //#line 161
1859   3            {
1860   4              unsigned char __nesc_temp = 
1861   4      //#line 161
1862   4              SchedulerBasicP__pushTask(id) ? SUCCESS : EBUSY;
1863   4      
1864   4              {
1865   5      //#line 161
1866   5                __nesc_atomic_end(__nesc_atomic); 
1867   5      //#line 161
1868   5                return __nesc_temp;
1869   5              }
1870   4            }
1871   3          }
1872   2      //#line 164
1873   2          __nesc_atomic_end(__nesc_atomic); }
1874   1      }
1875          
1876          //# 56 "/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc"
1877           /*inline*/  static error_t EchoP__print__postTask(void ){
1878   1      //#line 56
1879   1        unsigned char result;
1880   1      //#line 56
1881   1      
1882   1      //#line 56
1883   1        result = SchedulerBasicP__TaskBasic__postTask(EchoP__print);
1884   1      //#line 56
1885   1      
1886   1      //#line 56
1887   1        return result;
C51 COMPILER V8.09   APP                                                                   09/19/2014 21:48:16 PAGE 32  

1888   1      //#line 56
1889   1      }
1890          //#line 56
1891          //# 95 "/opt/tinyos-2.x-contrib/diku/mcs51/tos/chips/mcs51/pins/HplMcs51GeneralIOC.nc"
1892          static  /*inline*/  void HplMcs51GeneralIOC__P13__toggle(void )
1893          //#line 95
1894          {
1895   1        /* atomic removed: atomic calls only */
1896   1      //#line 95
1897   1        {
1898   2      //#line 95
1899   2          P1_3 = ~P1_3;
1900   2        }
1901   1      }
1902          
1903          //# 31 "/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc"
1904           /*inline*/  static void /*PlatformLedsC.Led2_rev*/ReverseGPIOP__1__In__toggle(void ){
1905   1      //#line 31
1906   1        HplMcs51GeneralIOC__P13__toggle();
1907   1      //#line 31
1908   1      }
1909          //#line 31
1910          //# 59 "/opt/tinyos-2.x-contrib/diku/common/lib/ReverseGPIOP.nc"
1911          static  /*inline*/  void /*PlatformLedsC.Led2_rev*/ReverseGPIOP__1__Out__toggle(void )
1912          //#line 59
1913          {
1914   1      //#line 59
1915   1        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
1916   2      //#line 59
1917   2          {
1918   3      //#line 59
1919   3            /*PlatformLedsC.Led2_rev*/ReverseGPIOP__1__In__toggle();
1920   3          }
1921   2      //#line 60
1922   2          __nesc_atomic_end(__nesc_atomic); }
1923   1      }
1924          
1925          //# 31 "/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc"
1926           /*inline*/  static void LedsP__Led2__toggle(void ){
1927   1      //#line 31
1928   1        /*PlatformLedsC.Led2_rev*/ReverseGPIOP__1__Out__toggle();
1929   1      //#line 31
1930   1      }
1931          //#line 31
1932          //# 103 "/opt/tinyos-2.x/tos/system/LedsP.nc"
1933          static  /*inline*/  void LedsP__Leds__led2Toggle(void )
1934          //#line 103
1935          {
1936   1        LedsP__Led2__toggle();
1937   1        ;
1938   1      //#line 105
1939   1        ;
1940   1      }
1941          
1942          //# 89 "/opt/tinyos-2.x/tos/interfaces/Leds.nc"
1943           /*inline*/  static void EchoP__Leds__led2Toggle(void ){
1944   1      //#line 89
1945   1        LedsP__Leds__led2Toggle();
1946   1      //#line 89
1947   1      }
1948          //#line 89
1949          //# 25 "/opt/tinyos-2.x/tos/system/NoPinC.nc"
C51 COMPILER V8.09   APP                                                                   09/19/2014 21:48:16 PAGE 33  

1950          static  /*inline*/  void /*PlatformLedsC.NoPinC*/NoPinC__0__GeneralIO__toggle(void )
1951          //#line 25
1952          {
1953   1      }
1954          
1955          //# 31 "/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc"
1956           /*inline*/  static void LedsP__Led1__toggle(void ){
1957   1      //#line 31
1958   1        /*PlatformLedsC.NoPinC*/NoPinC__0__GeneralIO__toggle();
1959   1      //#line 31
1960   1      }
1961          //#line 31
1962          //# 88 "/opt/tinyos-2.x/tos/system/LedsP.nc"
1963          static  /*inline*/  void LedsP__Leds__led1Toggle(void )
1964          //#line 88
1965          {
1966   1        LedsP__Led1__toggle();
1967   1        ;
1968   1      //#line 90
1969   1        ;
1970   1      }
1971          
1972          //# 72 "/opt/tinyos-2.x/tos/interfaces/Leds.nc"
1973           /*inline*/  static void EchoP__Leds__led1Toggle(void ){
1974   1      //#line 72
1975   1        LedsP__Leds__led1Toggle();
1976   1      //#line 72
1977   1      }
1978          //#line 72
1979          //# 92 "/opt/tinyos-2.x-contrib/diku/mcs51/tos/chips/mcs51/pins/HplMcs51GeneralIOC.nc"
1980          static  /*inline*/  void HplMcs51GeneralIOC__P10__toggle(void )
1981          //#line 92
1982          {
1983   1        /* atomic removed: atomic calls only */
1984   1      //#line 92
1985   1        {
1986   2      //#line 92
1987   2          P1_0 = ~P1_0;
1988   2        }
1989   1      }
1990          
1991          //# 31 "/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc"
1992           /*inline*/  static void /*PlatformLedsC.Led0_rev*/ReverseGPIOP__0__In__toggle(void ){
1993   1      //#line 31
1994   1        HplMcs51GeneralIOC__P10__toggle();
1995   1      //#line 31
1996   1      }
1997          //#line 31
1998          //# 59 "/opt/tinyos-2.x-contrib/diku/common/lib/ReverseGPIOP.nc"
1999          static  /*inline*/  void /*PlatformLedsC.Led0_rev*/ReverseGPIOP__0__Out__toggle(void )
2000          //#line 59
2001          {
2002   1      //#line 59
2003   1        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
2004   2      //#line 59
2005   2          {
2006   3      //#line 59
2007   3            /*PlatformLedsC.Led0_rev*/ReverseGPIOP__0__In__toggle();
2008   3          }
2009   2      //#line 60
2010   2          __nesc_atomic_end(__nesc_atomic); }
2011   1      }
C51 COMPILER V8.09   APP                                                                   09/19/2014 21:48:16 PAGE 34  

2012          
2013          //# 31 "/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc"
2014           /*inline*/  static void LedsP__Led0__toggle(void ){
2015   1      //#line 31
2016   1        /*PlatformLedsC.Led0_rev*/ReverseGPIOP__0__Out__toggle();
2017   1      //#line 31
2018   1      }
2019          //#line 31
2020          //# 73 "/opt/tinyos-2.x/tos/system/LedsP.nc"
2021          static  /*inline*/  void LedsP__Leds__led0Toggle(void )
2022          //#line 73
2023          {
2024   1        LedsP__Led0__toggle();
2025   1        ;
2026   1      //#line 75
2027   1        ;
2028   1      }
2029          
2030          //# 56 "/opt/tinyos-2.x/tos/interfaces/Leds.nc"
2031           /*inline*/  static void EchoP__Leds__led0Toggle(void ){
2032   1      //#line 56
2033   1        LedsP__Leds__led0Toggle();
2034   1      //#line 56
2035   1      }
2036          //#line 56
2037          //# 68 "EchoP.nc"
2038          static  /*inline*/  void EchoP__uart0__get(uint8_t _data)
2039          //#line 68
2040          {
2041   1        EchoP__buf = _data;
2042   1        EchoP__Leds__led0Toggle();
2043   1        EchoP__Leds__led1Toggle();
2044   1        EchoP__Leds__led2Toggle();
2045   1        EchoP__print__postTask();
2046   1      
2047   1        return;
2048   1      }
2049          
2050          //# 47 "/opt/tinyos-2.x/tos/lib/serial/SerialByteComm.nc"
2051           /*inline*/  static void HalCC2430SimpleUartP__uart0__get(uint8_t _data){
2052   1      //#line 47
2053   1        EchoP__uart0__get(_data);
2054   1      //#line 47
2055   1      }
2056          //#line 47
2057          //# 61 "EchoP.nc"
2058          static  /*inline*/  void EchoP__uart0__putDone(void )
2059          //#line 61
2060          {
2061   1      }
2062          
2063          //# 53 "/opt/tinyos-2.x/tos/lib/serial/SerialByteComm.nc"
2064           /*inline*/  static void HalCC2430SimpleUartP__uart0__putDone(void ){
2065   1      //#line 53
2066   1        EchoP__uart0__putDone();
2067   1      //#line 53
2068   1      }
2069          //#line 53
2070          //# 52 "/opt/tinyos-2.x/tos/system/RealMainP.nc"
2071            int main(void )
2072          //#line 52
2073          {
C51 COMPILER V8.09   APP                                                                   09/19/2014 21:48:16 PAGE 35  

2074   1        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
2075   2          {
2076   3      
2077   3      
2078   3      
2079   3      
2080   3      
2081   3            {
2082   4            }
2083   3      //#line 60
2084   3            ;
2085   3      
2086   3            RealMainP__Scheduler__init();
2087   3      
2088   3      
2089   3      
2090   3      
2091   3      
2092   3            RealMainP__PlatformInit__init();
2093   3            while (RealMainP__Scheduler__runNextTask()) ;
2094   3      
2095   3      
2096   3      
2097   3      
2098   3      
2099   3            RealMainP__SoftwareInit__init();
2100   3            while (RealMainP__Scheduler__runNextTask()) ;
2101   3          }
2102   2      //#line 77
2103   2          __nesc_atomic_end(__nesc_atomic); }
2104   1      
2105   1      
2106   1        __nesc_enable_interrupt();
2107   1      
2108   1        RealMainP__Boot__booted();
2109   1      
2110   1      
2111   1        RealMainP__Scheduler__taskLoop();
2112   1      
2113   1      
2114   1      
2115   1      
2116   1        return -1;
2117   1      }
2118          
2119          //# 123 "/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc"
2120          static bool SchedulerBasicP__Scheduler__runNextTask(void )
2121          {
2122   1        uint8_t nextTask;
2123   1      
2124   1        /* atomic removed: atomic calls only */
2125   1      //#line 127
2126   1        {
2127   2          nextTask = SchedulerBasicP__popTask();
2128   2          if (nextTask == SchedulerBasicP__NO_TASK) 
2129   2            {
2130   3              {
2131   4                unsigned char __nesc_temp = 
2132   4      //#line 131
2133   4                FALSE;
2134   4      
2135   4      //#line 131
C51 COMPILER V8.09   APP                                                                   09/19/2014 21:48:16 PAGE 36  

2136   4                return __nesc_temp;
2137   4              }
2138   3            }
2139   2        }
2140   1      //#line 134
2141   1        SchedulerBasicP__TaskBasic__runTask(nextTask);
2142   1        return TRUE;
2143   1      }
2144          
2145          //# 135 "/opt/tinyos-2.x-contrib/diku/mcs51/tos/chips/cc2430/usart/HalCC2430SimpleUartP.nc"
2146          void __vector_2(void) interrupt 2
2147          //#line 135
2148          {
2149   1        URX0IF = 0;
2150   1        HalCC2430SimpleUartP__uart0__get(U0BUF);
2151   1      }
2152          
2153          //#line 154
2154          void __vector_7(void) interrupt 7
2155          //#line 154
2156          {
2157   1        int done = 0;
2158   1      
2159   1        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
2160   2      //#line 157
2161   2          {
2162   3      
2163   3      
2164   3      
2165   3            if (!(U0CSR & 0x1)) {
2166   4      
2167   4                UTX0IF = 0;
2168   4                done = 1;
2169   4              }
2170   3          }
2171   2      //#line 166
2172   2          __nesc_atomic_end(__nesc_atomic); }
2173   1        if (done) {
2174   2            HalCC2430SimpleUartP__uart0__putDone();
2175   2          }
2176   1      }
2177          
C51 COMPILER V8.09   APP                                                                   09/19/2014 21:48:16 PAGE 37  

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


uint16_t . . . . . . . . . . . . . . .  TYPEDEF  -----  U_INT    -----  2
__nesc_nxbase_nx_int32_t . . . . . . .  TYPEDEF  -----  LONG     -----  4
CC2430_TICKF_DIV_8 . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
_reent . . . . . . . . . . . . . . . .  * TAG *  -----  STRUCT   -----  733
  _errno . . . . . . . . . . . . . . .  MEMBER   -----  INT      0000H  2
  _stdin . . . . . . . . . . . . . . .  MEMBER   -----  PTR      0002H  3
  _stdout. . . . . . . . . . . . . . .  MEMBER   -----  PTR      0005H  3
  _stderr. . . . . . . . . . . . . . .  MEMBER   -----  PTR      0008H  3
  _inc . . . . . . . . . . . . . . . .  MEMBER   -----  INT      000BH  2
  _emergency . . . . . . . . . . . . .  MEMBER   -----  ARRAY    000DH  25
  _current_category. . . . . . . . . .  MEMBER   -----  INT      0026H  2
  _current_locale. . . . . . . . . . .  MEMBER   -----  PTR      0028H  3
  __sdidinit . . . . . . . . . . . . .  MEMBER   -----  INT      002BH  2
  __cleanup. . . . . . . . . . . . . .  MEMBER   -----  PTR      002DH  3
  _result. . . . . . . . . . . . . . .  MEMBER   -----  PTR      0030H  3
  _result_k. . . . . . . . . . . . . .  MEMBER   -----  INT      0033H  2
  _p5s . . . . . . . . . . . . . . . .  MEMBER   -----  PTR      0035H  3
  _freelist. . . . . . . . . . . . . .  MEMBER   -----  PTR      0038H  3
  _cvtlen. . . . . . . . . . . . . . .  MEMBER   -----  INT      003BH  2
  _cvtbuf. . . . . . . . . . . . . . .  MEMBER   -----  PTR      003DH  3
  _new . . . . . . . . . . . . . . . .  MEMBER   -----  UNION    0040H  150
  _atexit. . . . . . . . . . . . . . .  MEMBER   -----  PTR      00D6H  3
  _atexit0 . . . . . . . . . . . . . .  MEMBER   -----  STRUCT   00D9H  301
  _sig_func. . . . . . . . . . . . . .  MEMBER   -----  PTR      0206H  3
  __sglue. . . . . . . . . . . . . . .  MEMBER   -----  STRUCT   0209H  8
  __sf . . . . . . . . . . . . . . . .  MEMBER   -----  ARRAY    0211H  -----
EchoP__Leds__led0On. . . . . . . . . .  STATIC   CODE   PROC     0000H  -----
CC2430_RFIF_CCA. . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
error_t. . . . . . . . . . . . . . . .  TYPEDEF  -----  U_CHAR   -----  1
ESIZE. . . . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
__nesc_nxbase_nx_int16_t . . . . . . .  TYPEDEF  -----  INT      -----  2
SchedulerBasicP__popTask . . . . . . .  STATIC   CODE   PROC     0000H  -----
  id . . . . . . . . . . . . . . . . .  AUTO     XDATA  U_CHAR   0000H  1
_EchoP__uart0__get . . . . . . . . . .  STATIC   CODE   PROC     0000H  -----
  _data. . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
cc2430_timer34_if_t. . . . . . . . . .  * TAG *  -----  ENUM     -----  -----
CC2430_IRCON2_UTX0IF . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
int_least32_t. . . . . . . . . . . . .  TYPEDEF  -----  LONG     -----  4
CC2430_IRCON2_UTX1IF . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_IEN0_ENCIE. . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
__nesc_unnamed4250 . . . . . . . . . .  * TAG *  -----  STRUCT   -----  6
  quot . . . . . . . . . . . . . . . .  MEMBER   -----  PTR      0000H  3
  rem. . . . . . . . . . . . . . . . .  MEMBER   -----  PTR      0003H  3
CC2430_TIMER3_4_DIV_32 . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
__nesc_unnamed4260 . . . . . . . . . .  * TAG *  -----  ENUM     -----  -----
EA . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00AFH  1
__nesc_unnamed4251 . . . . . . . . . .  * TAG *  -----  ENUM     -----  -----
ldiv_t . . . . . . . . . . . . . . . .  TYPEDEF  -----  STRUCT   -----  8
  quot . . . . . . . . . . . . . . . .  MEMBER   -----  LONG     0000H  4
  rem. . . . . . . . . . . . . . . . .  MEMBER   -----  LONG     0004H  4
__nesc_unnamed4242 . . . . . . . . . .  * TAG *  -----  STRUCT   -----  6
  quot . . . . . . . . . . . . . . . .  MEMBER   -----  PTR      0000H  3
  rem. . . . . . . . . . . . . . . . .  MEMBER   -----  PTR      0003H  3
int_least16_t. . . . . . . . . . . . .  TYPEDEF  -----  INT      -----  2
__nesc_unnamed4270 . . . . . . . . . .  * TAG *  -----  ENUM     -----  -----
CC2430_TIMER3_4_MODE_FREE. . . . . . .  E_CONST  -----  U_CHAR   -----  1
__nesc_unnamed4261 . . . . . . . . . .  * TAG *  -----  ENUM     -----  -----
C51 COMPILER V8.09   APP                                                                   09/19/2014 21:48:16 PAGE 38  

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


__nesc_unnamed4252 . . . . . . . . . .  * TAG *  -----  ENUM     -----  -----
__nesc_unnamed4243 . . . . . . . . . .  * TAG *  -----  STRUCT   -----  6
  __count. . . . . . . . . . . . . . .  MEMBER   -----  INT      0000H  2
  __value. . . . . . . . . . . . . . .  MEMBER   -----  UNION    0002H  4
int32_t. . . . . . . . . . . . . . . .  TYPEDEF  -----  LONG     -----  4
__nesc_unnamed4271 . . . . . . . . . .  * TAG *  -----  ENUM     -----  -----
CC2430_TIMER3_4_DIV_16 . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_RFSTATUS_FIFOP. . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
__nesc_unnamed4262 . . . . . . . . . .  * TAG *  -----  ENUM     -----  -----
__nesc_unnamed4253 . . . . . . . . . .  * TAG *  -----  ENUM     -----  -----
__nesc_unnamed4244 . . . . . . . . . .  * TAG *  -----  UNION    -----  4
  __wch. . . . . . . . . . . . . . . .  MEMBER   -----  U_INT    0000H  2
  __wchb . . . . . . . . . . . . . . .  MEMBER   -----  ARRAY    0000H  4
__nesc_unnamed4272 . . . . . . . . . .  * TAG *  -----  ENUM     -----  -----
T32khz . . . . . . . . . . . . . . . .  TYPEDEF  -----  U_CHAR   -----  1
cc2430_timerMAC_interval_t . . . . . .  * TAG *  -----  ENUM     -----  -----
__nesc_unnamed4263 . . . . . . . . . .  * TAG *  -----  ENUM     -----  -----
CC2430_RFIM_CCA. . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
__nesc_unnamed4254 . . . . . . . . . .  * TAG *  -----  ENUM     -----  -----
__nesc_unnamed4245 . . . . . . . . . .  * TAG *  -----  UNION    -----  150
  _reent . . . . . . . . . . . . . . .  MEMBER   -----  STRUCT   0000H  150
  _unused. . . . . . . . . . . . . . .  MEMBER   -----  STRUCT   0000H  150
int16_t. . . . . . . . . . . . . . . .  TYPEDEF  -----  INT      -----  2
HplMcs51GeneralIOC__P10__toggle. . . .  STATIC   CODE   PROC     0000H  -----
__nesc_unnamed4264 . . . . . . . . . .  * TAG *  -----  ENUM     -----  -----
__nesc_unnamed4255 . . . . . . . . . .  * TAG *  -----  ENUM     -----  -----
EBUSY. . . . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
__nesc_unnamed4246 . . . . . . . . . .  * TAG *  -----  STRUCT   -----  150
  _unused_rand . . . . . . . . . . . .  MEMBER   -----  U_INT    0000H  2
  _strtok_last . . . . . . . . . . . .  MEMBER   -----  PTR      0002H  3
  _asctime_buf . . . . . . . . . . . .  MEMBER   -----  ARRAY    0005H  26
  _localtime_buf . . . . . . . . . . .  MEMBER   -----  STRUCT   001FH  18
  _gamma_signgam . . . . . . . . . . .  MEMBER   -----  INT      0031H  2
  _rand_next . . . . . . . . . . . . .  MEMBER   -----  PTR      0033H  3
  _r48 . . . . . . . . . . . . . . . .  MEMBER   -----  STRUCT   0036H  14
  _mblen_state . . . . . . . . . . . .  MEMBER   -----  STRUCT   0044H  6
  _mbtowc_state. . . . . . . . . . . .  MEMBER   -----  STRUCT   004AH  6
  _wctomb_state. . . . . . . . . . . .  MEMBER   -----  STRUCT   0050H  6
  _l64a_buf. . . . . . . . . . . . . .  MEMBER   -----  ARRAY    0056H  8
  _signal_buf. . . . . . . . . . . . .  MEMBER   -----  ARRAY    005EH  24
  _getdate_err . . . . . . . . . . . .  MEMBER   -----  INT      0076H  2
  _mbrlen_state. . . . . . . . . . . .  MEMBER   -----  STRUCT   0078H  6
  _mbrtowc_state . . . . . . . . . . .  MEMBER   -----  STRUCT   007EH  6
  _mbsrtowcs_state . . . . . . . . . .  MEMBER   -----  STRUCT   0084H  6
  _wcrtomb_state . . . . . . . . . . .  MEMBER   -----  STRUCT   008AH  6
  _wcsrtombs_state . . . . . . . . . .  MEMBER   -----  STRUCT   0090H  6
LedsP__Leds__led0On. . . . . . . . . .  STATIC   CODE   PROC     0000H  -----
CC2430_TIMER3_4_DIV_64 . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
__nesc_unnamed4265 . . . . . . . . . .  * TAG *  -----  ENUM     -----  -----
__nesc_enable_interrupt. . . . . . . .  STATIC   CODE   PROC     0000H  -----
__nesc_unnamed4256 . . . . . . . . . .  * TAG *  -----  ENUM     -----  -----
__nesc_unnamed4247 . . . . . . . . . .  * TAG *  -----  STRUCT   -----  150
  _nextf . . . . . . . . . . . . . . .  MEMBER   -----  ARRAY    0000H  90
  _nmalloc . . . . . . . . . . . . . .  MEMBER   -----  ARRAY    005AH  60
CC2430_WDCTL_INT_MASK. . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
__nesc_unnamed4266 . . . . . . . . . .  * TAG *  -----  ENUM     -----  -----
__nesc_unnamed4257 . . . . . . . . . .  * TAG *  -----  ENUM     -----  -----
C51 COMPILER V8.09   APP                                                                   09/19/2014 21:48:16 PAGE 39  

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


__nesc_unnamed4248 . . . . . . . . . .  * TAG *  -----  STRUCT   -----  4
  quot . . . . . . . . . . . . . . . .  MEMBER   -----  INT      0000H  2
  rem. . . . . . . . . . . . . . . . .  MEMBER   -----  INT      0002H  2
HplMcs51GeneralIOC__P13__toggle. . . .  STATIC   CODE   PROC     0000H  -----
CC2430_T1CCTLx_CAP . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
__nesc_unnamed4267 . . . . . . . . . .  * TAG *  -----  ENUM     -----  -----
__nesc_unnamed4258 . . . . . . . . . .  * TAG *  -----  ENUM     -----  -----
__nesc_unnamed4249 . . . . . . . . . .  * TAG *  -----  STRUCT   -----  8
  quot . . . . . . . . . . . . . . . .  MEMBER   -----  LONG     0000H  4
  rem. . . . . . . . . . . . . . . . .  MEMBER   -----  LONG     0004H  4
CC2430_TIMERMAC_MODE_IDLE. . . . . . .  E_CONST  -----  U_CHAR   -----  1
__nesc_unnamed4268 . . . . . . . . . .  * TAG *  -----  ENUM     -----  -----
__nesc_unnamed4259 . . . . . . . . . .  * TAG *  -----  ENUM     -----  -----
uint_fast32_t. . . . . . . . . . . . .  TYPEDEF  -----  U_INT    -----  2
__nesc_unnamed4269 . . . . . . . . . .  * TAG *  -----  ENUM     -----  -----
IEN2 . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   009AH  1
CC2430_RFIF_TXDONE . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
_glue. . . . . . . . . . . . . . . . .  * TAG *  -----  STRUCT   -----  8
  _next. . . . . . . . . . . . . . . .  MEMBER   -----  PTR      0000H  3
  _niobs . . . . . . . . . . . . . . .  MEMBER   -----  INT      0003H  2
  _iobs. . . . . . . . . . . . . . . .  MEMBER   -----  PTR      0005H  3
LEDS_LED0. . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_TIMERWDT_MODE_TIMER . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_TIMIF_OVFIM . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
uint_fast16_t. . . . . . . . . . . . .  TYPEDEF  -----  U_INT    -----  2
ReverseGPIOP__0__In__toggle. . . . . .  STATIC   CODE   PROC     0000H  -----
_HalCC2430SimpleUartP__uart0__put. . .  STATIC   CODE   PROC     0000H  -----
  _data. . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
SchedulerBasicP__Scheduler__runNextTask STATIC   CODE   PROC     0000H  -----
  __nesc_temp. . . . . . . . . . . . .  AUTO     XDATA  U_CHAR   0000H  1
  nextTask . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
LEDS_LED1. . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_TIMIF_T3OVFIF . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_TIMERWDT_32768. . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
P1_0 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0090H  1
ReverseGPIOP__1__In__toggle. . . . . .  STATIC   CODE   PROC     0000H  -----
LEDS_LED2. . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_TIMIF_T4OVFIF . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_CLKCON_CLKSPD . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
size_t . . . . . . . . . . . . . . . .  TYPEDEF  -----  U_INT    -----  2
ReverseGPIOP__0__Out__toggle . . . . .  STATIC   CODE   PROC     0000H  -----
  __nesc_atomic. . . . . . . . . . . .  AUTO     XDATA  U_CHAR   0000H  1
LEDS_LED3. . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_T1_OVFIF. . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_MDMCTRL0H_CCA_HYST. . . . . . .  E_CONST  -----  U_CHAR   -----  1
RealMainP__Scheduler__runNextTask. . .  STATIC   CODE   PROC     0000H  -----
  result . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
HalCC2430SimpleUartP__Init__init . . .  STATIC   CODE   PROC     0000H  -----
ReverseGPIOP__1__Out__toggle . . . . .  STATIC   CODE   PROC     0000H  -----
  __nesc_atomic. . . . . . . . . . . .  AUTO     XDATA  U_CHAR   0000H  1
LEDS_LED4. . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_T34CTL_CLR. . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
P1_3 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0093H  1
LEDS_LED5. . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
SchedulerBasicP__m_tail. . . . . . . .  PUBLIC   XDATA  U_CHAR   0000H  1
LEDS_LED6. . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_T34CTL_DIV. . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
C51 COMPILER V8.09   APP                                                                   09/19/2014 21:48:16 PAGE 40  

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


CC2430_SLEEP_XOSC_STB. . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_RFIM_TXDONE . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
LEDS_LED7. . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
nxle_uint32_t. . . . . . . . . . . . .  TYPEDEF  -----  STRUCT   -----  4
  _data. . . . . . . . . . . . . . . .  MEMBER   -----  ARRAY    0000H  4
nx_uint8_t . . . . . . . . . . . . . .  TYPEDEF  -----  STRUCT   -----  1
  _data. . . . . . . . . . . . . . . .  MEMBER   -----  ARRAY    0000H  1
CC2430_RFIF_SFD. . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
int_fast32_t . . . . . . . . . . . . .  TYPEDEF  -----  INT      -----  2
CC2430_T1CCTLx_CMP . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_T1CTL_IF_MASK . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
div_t. . . . . . . . . . . . . . . . .  TYPEDEF  -----  STRUCT   -----  4
  quot . . . . . . . . . . . . . . . .  MEMBER   -----  INT      0000H  2
  rem. . . . . . . . . . . . . . . . .  MEMBER   -----  INT      0002H  2
wint_t . . . . . . . . . . . . . . . .  TYPEDEF  -----  U_INT    -----  2
nxle_uint16_t. . . . . . . . . . . . .  TYPEDEF  -----  STRUCT   -----  2
  _data. . . . . . . . . . . . . . . .  MEMBER   -----  ARRAY    0000H  2
HalCC2430SimpleUartP__uart0__putDone .  STATIC   CODE   PROC     0000H  -----
int_fast16_t . . . . . . . . . . . . .  TYPEDEF  -----  INT      -----  2
__nesc_nxbase_nxle_uint8_t . . . . . .  TYPEDEF  -----  U_CHAR   -----  1
_EchoP__uart0__put . . . . . . . . . .  STATIC   CODE   PROC     0000H  -----
  _data. . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
  result . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
SchedulerBasicP__McuSleep__sleep . . .  STATIC   CODE   PROC     0000H  -----
SUCCESS. . . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
nxle_uint64_t. . . . . . . . . . . . .  TYPEDEF  -----  STRUCT   -----  8
  _data. . . . . . . . . . . . . . . .  MEMBER   -----  ARRAY    0000H  8
EchoP____nesc_unnamed4274. . . . . . .  * TAG *  -----  ENUM     -----  -----
CC2430_TIMER3_4_MODE_DOWN. . . . . . .  E_CONST  -----  U_CHAR   -----  1
cc2430_tick_spd_t. . . . . . . . . . .  * TAG *  -----  ENUM     -----  -----
CC2430_RFPWR_RREG_RADIO_PD . . . . . .  E_CONST  -----  U_CHAR   -----  1
FAIL . . . . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_TIMERWDT_512. . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_MDMCTRL0H_FRAME_FILT. . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_RFIM_SFD. . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_IRCON_P0IF. . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_TIMER1_MODE_MODULO. . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_IEN2_WDTIE. . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
__nesc_atomic_t. . . . . . . . . . . .  TYPEDEF  -----  U_CHAR   -----  1
EOFF . . . . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
__tm . . . . . . . . . . . . . . . . .  * TAG *  -----  STRUCT   -----  18
  __tm_sec . . . . . . . . . . . . . .  MEMBER   -----  INT      0000H  2
  __tm_min . . . . . . . . . . . . . .  MEMBER   -----  INT      0002H  2
  __tm_hour. . . . . . . . . . . . . .  MEMBER   -----  INT      0004H  2
  __tm_mday. . . . . . . . . . . . . .  MEMBER   -----  INT      0006H  2
  __tm_mon . . . . . . . . . . . . . .  MEMBER   -----  INT      0008H  2
  __tm_year. . . . . . . . . . . . . .  MEMBER   -----  INT      000AH  2
  __tm_wday. . . . . . . . . . . . . .  MEMBER   -----  INT      000CH  2
  __tm_yday. . . . . . . . . . . . . .  MEMBER   -----  INT      000EH  2
  __tm_isdst . . . . . . . . . . . . .  MEMBER   -----  INT      0010H  2
nxle_int32_t . . . . . . . . . . . . .  TYPEDEF  -----  STRUCT   -----  4
  _data. . . . . . . . . . . . . . . .  MEMBER   -----  ARRAY    0000H  4
nx_int8_t. . . . . . . . . . . . . . .  TYPEDEF  -----  STRUCT   -----  1
  _data. . . . . . . . . . . . . . . .  MEMBER   -----  ARRAY    0000H  1
CC2430_T1CTL_MODE. . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
U0BAUD . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00C2H  1
nxle_int16_t . . . . . . . . . . . . .  TYPEDEF  -----  STRUCT   -----  2
C51 COMPILER V8.09   APP                                                                   09/19/2014 21:48:16 PAGE 41  

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  _data. . . . . . . . . . . . . . . .  MEMBER   -----  ARRAY    0000H  2
CC2430_T34CTL_DIV_MASK . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
cc2430_timer1_mode_t . . . . . . . . .  * TAG *  -----  ENUM     -----  -----
CC2430_IRCON_T1IF. . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
EchoP__uart0__putDone. . . . . . . . .  STATIC   CODE   PROC     0000H  -----
CC2430_WDCTL_EN. . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_IRCON_T2IF. . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_IEN0_EA . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
__nesc_nxbase_nxle_int8_t. . . . . . .  TYPEDEF  -----  CHAR     -----  1
SchedulerBasicP____nesc_unnamed4273. .  * TAG *  -----  ENUM     -----  -----
CC2430_TIMER1_DIV_128. . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_IRCON_T3IF. . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
nxle_int64_t . . . . . . . . . . . . .  TYPEDEF  -----  STRUCT   -----  8
  _data. . . . . . . . . . . . . . . .  MEMBER   -----  ARRAY    0000H  8
main . . . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  __nesc_atomic. . . . . . . . . . . .  AUTO     XDATA  U_CHAR   0000H  1
McuSleepC__McuSleep__sleep . . . . . .  STATIC   CODE   PROC     0000H  -----
CC2430_IRCON_T4IF. . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
__ULong. . . . . . . . . . . . . . . .  TYPEDEF  -----  U_LONG   -----  4
LedsP__Led0__toggle. . . . . . . . . .  STATIC   CODE   PROC     0000H  -----
LedsP__Init__init. . . . . . . . . . .  STATIC   CODE   PROC     0000H  -----
CC2430_RFPWR_RREG_DELAY. . . . . . . .  E_CONST  -----  U_CHAR   -----  1
LedsP__Led1__toggle. . . . . . . . . .  STATIC   CODE   PROC     0000H  -----
CC2430_TMAC_CMPIF. . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_TIMER1_MODE_OFF . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
_mbstate_t . . . . . . . . . . . . . .  TYPEDEF  -----  STRUCT   -----  6
  __count. . . . . . . . . . . . . . .  MEMBER   -----  INT      0000H  2
  __value. . . . . . . . . . . . . . .  MEMBER   -----  UNION    0002H  4
LedsP__Led2__toggle. . . . . . . . . .  STATIC   CODE   PROC     0000H  -----
EchoP__Leds__led0Toggle. . . . . . . .  STATIC   CODE   PROC     0000H  -----
CC2430_RREG_DELAY_500. . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
EchoP__Leds__led1Toggle. . . . . . . .  STATIC   CODE   PROC     0000H  -----
SchedulerBasicP__m_next. . . . . . . .  PUBLIC   XDATA  ARRAY    0001H  1
CC2430_MDMCTRL0H_PAN_COORDINATOR . . .  E_CONST  -----  U_CHAR   -----  1
EchoP__Leds__led2Toggle. . . . . . . .  STATIC   CODE   PROC     0000H  -----
CC2430_RREG_DELAY_250. . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
NoPinC__0__GeneralIO__makeOutput . . .  STATIC   CODE   PROC     0000H  -----
CC2430_TIMER1_MODE_UPDOWN. . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_RREG_DELAY_125. . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_RFIF_CSP_WT . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_TICKF_DIV_32. . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
bool . . . . . . . . . . . . . . . . .  TYPEDEF  -----  U_CHAR   -----  1
CC2430_T2CNF_SYNC. . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_TMAC_PERIF. . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_T1CTL_MODE_MASK . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_TICKF_DIV_16. . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_MDMCTRL0L_AUTOACK . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_RFIF_FIFOP. . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_T1CCTLx_CPSEL . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_IEN2_P1IE . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_IEN0_RFERRIE. . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_T34CTL_WDTIF. . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_IEN2_P2IE . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
LedsP__Leds__led0Toggle. . . . . . . .  STATIC   CODE   PROC     0000H  -----
CC2430_TICKF_DIV_64. . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_SLEEP_MODE. . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
ENOACK . . . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
C51 COMPILER V8.09   APP                                                                   09/19/2014 21:48:16 PAGE 42  

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


LedsP__Leds__led1Toggle. . . . . . . .  STATIC   CODE   PROC     0000H  -----
CC2430_CLKCON_OSC. . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_RFIM_CSP_WT . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
LedsP__Leds__led2Toggle. . . . . . . .  STATIC   CODE   PROC     0000H  -----
CC2430_T34CTL_OVFIM. . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
_SchedulerBasicP__TaskBasic__postTask.  STATIC   CODE   PROC     0000H  -----
  id . . . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0006H  1
  __nesc_temp. . . . . . . . . . . . .  AUTO     XDATA  U_CHAR   0001H  1
  __nesc_atomic. . . . . . . . . . . .  AUTO     XDATA  U_CHAR   0000H  1
CC2430_TIMER3_4_MODE_MODULO. . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_RFPWR_RREG_DELAY_MASK . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_SLEEP_OSC32K_CALDIS . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_RFSTATUS_FIFO . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_RFIM_FIFOP. . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
SchedulerBasicP__Scheduler__init . . .  STATIC   CODE   PROC     0000H  -----
CC2430_WDCTL_MODE. . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_MDMCTRL0L_AUTOCRC . . . . . . .  E_CONST  -----  U_CHAR   -----  1
PERCFG . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00F1H  1
HplMcs51GeneralIOC__P10__makeOutput. .  STATIC   CODE   PROC     0000H  -----
cc2430_timer3_4_mode_t . . . . . . . .  * TAG *  -----  ENUM     -----  -----
CC2430_RFPWR_ADI_RADIO_PD. . . . . . .  E_CONST  -----  U_CHAR   -----  1
RealMainP__Scheduler__init . . . . . .  STATIC   CODE   PROC     0000H  -----
CC2430_TIMER1_DIV_1. . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_TIMER3_4_DIV_128. . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CLKCON . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00C6H  1
HplMcs51GeneralIOC__P13__makeOutput. .  STATIC   CODE   PROC     0000H  -----
_LOCK_T. . . . . . . . . . . . . . . .  TYPEDEF  -----  VOID_PTR -----  3
CC2430_TMAC_OFCMPIF. . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
URX0IE . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00AAH  1
__sFILE64. . . . . . . . . . . . . . .  * TAG *  -----  STRUCT   -----  68
  _p . . . . . . . . . . . . . . . . .  MEMBER   -----  PTR      0000H  3
  _r . . . . . . . . . . . . . . . . .  MEMBER   -----  INT      0003H  2
  _w . . . . . . . . . . . . . . . . .  MEMBER   -----  INT      0005H  2
  _flags . . . . . . . . . . . . . . .  MEMBER   -----  INT      0007H  2
  _file. . . . . . . . . . . . . . . .  MEMBER   -----  INT      0009H  2
  _bf. . . . . . . . . . . . . . . . .  MEMBER   -----  STRUCT   000BH  5
  _lbfsize . . . . . . . . . . . . . .  MEMBER   -----  INT      0010H  2
  __data . . . . . . . . . . . . . . .  MEMBER   -----  PTR      0012H  3
  _cookie. . . . . . . . . . . . . . .  MEMBER   -----  PTR      0015H  3
  _read. . . . . . . . . . . . . . . .  MEMBER   -----  PTR      0018H  3
  _write . . . . . . . . . . . . . . .  MEMBER   -----  PTR      001BH  3
  _seek. . . . . . . . . . . . . . . .  MEMBER   -----  PTR      001EH  3
  _close . . . . . . . . . . . . . . .  MEMBER   -----  PTR      0021H  3
  _ub. . . . . . . . . . . . . . . . .  MEMBER   -----  STRUCT   0024H  5
  _up. . . . . . . . . . . . . . . . .  MEMBER   -----  PTR      0029H  3
  _ur. . . . . . . . . . . . . . . . .  MEMBER   -----  INT      002CH  2
  _ubuf. . . . . . . . . . . . . . . .  MEMBER   -----  ARRAY    002EH  3
  _nbuf. . . . . . . . . . . . . . . .  MEMBER   -----  ARRAY    0031H  1
  _lb. . . . . . . . . . . . . . . . .  MEMBER   -----  STRUCT   0032H  5
  _blksize . . . . . . . . . . . . . .  MEMBER   -----  INT      0037H  2
  _flags2. . . . . . . . . . . . . . .  MEMBER   -----  INT      0039H  2
  _offset. . . . . . . . . . . . . . .  MEMBER   -----  PTR      003BH  3
  _seek64. . . . . . . . . . . . . . .  MEMBER   -----  PTR      003EH  3
  _lock. . . . . . . . . . . . . . . .  MEMBER   -----  VOID_PTR 0041H  3
URX0IF . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008BH  1
_Bigint. . . . . . . . . . . . . . . .  * TAG *  -----  STRUCT   -----  15
  _next. . . . . . . . . . . . . . . .  MEMBER   -----  PTR      0000H  3
C51 COMPILER V8.09   APP                                                                   09/19/2014 21:48:16 PAGE 43  

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  _k . . . . . . . . . . . . . . . . .  MEMBER   -----  INT      0003H  2
  _maxwds. . . . . . . . . . . . . . .  MEMBER   -----  INT      0005H  2
  _sign. . . . . . . . . . . . . . . .  MEMBER   -----  INT      0007H  2
  _wds . . . . . . . . . . . . . . . .  MEMBER   -----  INT      0009H  2
  _x . . . . . . . . . . . . . . . . .  MEMBER   -----  ARRAY    000BH  4
ReverseGPIOP__0__In__makeOutput. . . .  STATIC   CODE   PROC     0000H  -----
CC2430_T2PEROF2_CMPIM. . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_SLEEP_MODE_MASK . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
P1_DIR . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00FEH  1
CC2430_IRCON2_WDTIF. . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
EINVAL . . . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
TRUE . . . . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
ReverseGPIOP__1__In__makeOutput. . . .  STATIC   CODE   PROC     0000H  -----
EchoP__print . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_T34CTL_START. . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_TIMER1_DIV_8. . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
P0_ALT . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00F3H  1
UTX0IF . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00E9H  1
ReverseGPIOP__0__Out__makeOutput . . .  STATIC   CODE   PROC     0000H  -----
CC2430_TIMER3_4_MODE_UPDOWN. . . . . .  E_CONST  -----  U_CHAR   -----  1
ENOMEM . . . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
_SchedulerBasicP__TaskBasic__runTask .  STATIC   CODE   PROC     0000H  -----
  arg_0x7ef72230 . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
NoPinC__0__GeneralIO__set. . . . . . .  STATIC   CODE   PROC     0000H  -----
ReverseGPIOP__1__Out__makeOutput . . .  STATIC   CODE   PROC     0000H  -----
cc2430_timer1_prescaler_t. . . . . . .  * TAG *  -----  ENUM     -----  -----
CC2430_MDMCTRL0H_ADDR_DECODE . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_RREG_DELAY_0. . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
nx_uint32_t. . . . . . . . . . . . . .  TYPEDEF  -----  STRUCT   -----  4
  _data. . . . . . . . . . . . . . . .  MEMBER   -----  ARRAY    0000H  4
cc2430_timerMAC_mode_t . . . . . . . .  * TAG *  -----  ENUM     -----  -----
HplMcs51GeneralIOC__P10__clr . . . . .  STATIC   CODE   PROC     0000H  -----
CC2430_IRCON_STIF. . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
_flock_t . . . . . . . . . . . . . . .  TYPEDEF  -----  VOID_PTR -----  3
nx_uint16_t. . . . . . . . . . . . . .  TYPEDEF  -----  STRUCT   -----  2
  _data. . . . . . . . . . . . . . . .  MEMBER   -----  ARRAY    0000H  2
CC2430_T1CTL_CH0IF . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_T2PEROF2_PERIM. . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_T1CTL_CH1IF . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_IEN2_RFIE . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
__nesc_nxbase_nxle_uint32_t. . . . . .  TYPEDEF  -----  U_LONG   -----  4
__nesc_nxbase_nx_uint8_t . . . . . . .  TYPEDEF  -----  U_CHAR   -----  1
ptrdiff_t. . . . . . . . . . . . . . .  TYPEDEF  -----  INT      -----  2
HplMcs51GeneralIOC__P13__clr . . . . .  STATIC   CODE   PROC     0000H  -----
CC2430_T1CTL_CH2IF . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_RFIF_CSP_STOP . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
nx_uint64_t. . . . . . . . . . . . . .  TYPEDEF  -----  STRUCT   -----  8
  _data. . . . . . . . . . . . . . . .  MEMBER   -----  ARRAY    0000H  8
EALREADY . . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
__nesc_nxbase_nxle_uint16_t. . . . . .  TYPEDEF  -----  U_INT    -----  2
imaxdiv_t. . . . . . . . . . . . . . .  TYPEDEF  -----  STRUCT   -----  6
  quot . . . . . . . . . . . . . . . .  MEMBER   -----  PTR      0000H  3
  rem. . . . . . . . . . . . . . . . .  MEMBER   -----  PTR      0003H  3
cc2430_timer1_if_t . . . . . . . . . .  * TAG *  -----  ENUM     -----  -----
uint_least8_t. . . . . . . . . . . . .  TYPEDEF  -----  U_CHAR   -----  1
ReverseGPIOP__0__In__clr . . . . . . .  STATIC   CODE   PROC     0000H  -----
ReverseGPIOP__1__In__clr . . . . . . .  STATIC   CODE   PROC     0000H  -----
C51 COMPILER V8.09   APP                                                                   09/19/2014 21:48:16 PAGE 44  

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


SchedulerBasicP__NO_TASK . . . . . . .  E_CONST  -----  U_CHAR   -----  1
TMilli . . . . . . . . . . . . . . . .  TYPEDEF  -----  U_CHAR   -----  1
CC2430_T1CCTLx_IM. . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
nx_int32_t . . . . . . . . . . . . . .  TYPEDEF  -----  STRUCT   -----  4
  _data. . . . . . . . . . . . . . . .  MEMBER   -----  ARRAY    0000H  4
ReverseGPIOP__0__Out__clr. . . . . . .  STATIC   CODE   PROC     0000H  -----
uint8_t. . . . . . . . . . . . . . . .  TYPEDEF  -----  U_CHAR   -----  1
EchoP__buf . . . . . . . . . . . . . .  PUBLIC   XDATA  CHAR     0002H  1
CC2430_RFIM_CSP_STOP . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
nx_int16_t . . . . . . . . . . . . . .  TYPEDEF  -----  STRUCT   -----  2
  _data. . . . . . . . . . . . . . . .  MEMBER   -----  ARRAY    0000H  2
_SchedulerBasicP__isWaiting. . . . . .  STATIC   CODE   PROC     0000H  -----
  id . . . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
HplMcs51GeneralIOC__P10__set . . . . .  STATIC   CODE   PROC     0000H  -----
TMicro . . . . . . . . . . . . . . . .  TYPEDEF  -----  U_CHAR   -----  1
CC2430_TIMER3_4_DIV_1. . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_TIMER3_4_DIV_2. . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_IRCON2_P1IF . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
__nesc_nxbase_nxle_int32_t . . . . . .  TYPEDEF  -----  LONG     -----  4
__nesc_nxbase_nx_int8_t. . . . . . . .  TYPEDEF  -----  CHAR     -----  1
CC2430_SLEEP_POWERMODE_0 . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_IRCON2_P2IF . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
nx_int64_t . . . . . . . . . . . . . .  TYPEDEF  -----  STRUCT   -----  8
  _data. . . . . . . . . . . . . . . .  MEMBER   -----  ARRAY    0000H  8
SchedulerBasicP__Scheduler__taskLoop .  STATIC   CODE   PROC     0000H  -----
  __nesc_atomic. . . . . . . . . . . .  AUTO     XDATA  U_CHAR   0001H  1
  nextTask . . . . . . . . . . . . . .  AUTO     XDATA  U_CHAR   0000H  1
CC2430_TIMER3_4_DIV_4. . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_SLEEP_POWERMODE_1 . . . . . . .  E_CONST  -----  U_CHAR   -----  1
__sFILE. . . . . . . . . . . . . . . .  * TAG *  -----  STRUCT   -----  62
  _p . . . . . . . . . . . . . . . . .  MEMBER   -----  PTR      0000H  3
  _r . . . . . . . . . . . . . . . . .  MEMBER   -----  INT      0003H  2
  _w . . . . . . . . . . . . . . . . .  MEMBER   -----  INT      0005H  2
  _flags . . . . . . . . . . . . . . .  MEMBER   -----  INT      0007H  2
  _file. . . . . . . . . . . . . . . .  MEMBER   -----  INT      0009H  2
  _bf. . . . . . . . . . . . . . . . .  MEMBER   -----  STRUCT   000BH  5
  _lbfsize . . . . . . . . . . . . . .  MEMBER   -----  INT      0010H  2
  _cookie. . . . . . . . . . . . . . .  MEMBER   -----  PTR      0012H  3
  _read. . . . . . . . . . . . . . . .  MEMBER   -----  PTR      0015H  3
  _write . . . . . . . . . . . . . . .  MEMBER   -----  PTR      0018H  3
  _seek. . . . . . . . . . . . . . . .  MEMBER   -----  PTR      001BH  3
  _close . . . . . . . . . . . . . . .  MEMBER   -----  PTR      001EH  3
  _ub. . . . . . . . . . . . . . . . .  MEMBER   -----  STRUCT   0021H  5
  _up. . . . . . . . . . . . . . . . .  MEMBER   -----  PTR      0026H  3
  _ur. . . . . . . . . . . . . . . . .  MEMBER   -----  INT      0029H  2
  _ubuf. . . . . . . . . . . . . . . .  MEMBER   -----  ARRAY    002BH  3
  _nbuf. . . . . . . . . . . . . . . .  MEMBER   -----  ARRAY    002EH  1
  _lb. . . . . . . . . . . . . . . . .  MEMBER   -----  STRUCT   002FH  5
  _blksize . . . . . . . . . . . . . .  MEMBER   -----  INT      0034H  2
  _offset. . . . . . . . . . . . . . .  MEMBER   -----  INT      0036H  2
  __data . . . . . . . . . . . . . . .  MEMBER   -----  PTR      0038H  3
  _lock. . . . . . . . . . . . . . . .  MEMBER   -----  VOID_PTR 003BH  3
__nesc_nxbase_nxle_int16_t . . . . . .  TYPEDEF  -----  INT      -----  2
EchoP____nesc_sillytask_print. . . . .  TYPEDEF  -----  ARRAY    -----  -----
cc2430_timerMAC_T2PEROF2_t . . . . . .  * TAG *  -----  ENUM     -----  -----
CC2430_SLEEP_POWERMODE_2 . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_IEN0_STIE . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
C51 COMPILER V8.09   APP                                                                   09/19/2014 21:48:16 PAGE 45  

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


CC2430_SLEEP_POWERMODE_3 . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_RREG_DELAY_1000 . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
_iconv_t . . . . . . . . . . . . . . .  TYPEDEF  -----  VOID_PTR -----  3
int_least8_t . . . . . . . . . . . . .  TYPEDEF  -----  CHAR     -----  1
RealMainP__Scheduler__taskLoop . . . .  STATIC   CODE   PROC     0000H  -----
CC2430_T2PEROF2_OFCMPIM. . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_RREG_DELAY_2000 . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
ReverseGPIOP__0__In__set . . . . . . .  STATIC   CODE   PROC     0000H  -----
LedsP__Led0__makeOutput. . . . . . . .  STATIC   CODE   PROC     0000H  -----
CC2430_TIMER3_4_DIV_8. . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_T34CTL_MODE . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
LedsP__Led1__makeOutput. . . . . . . .  STATIC   CODE   PROC     0000H  -----
CC2430_RFSTATUS_CCA. . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_MDMCTRL0H_RESERVED_FRAME_MODE .  E_CONST  -----  U_CHAR   -----  1
_fpos64_t. . . . . . . . . . . . . . .  TYPEDEF  -----  PTR      -----  3
int8_t . . . . . . . . . . . . . . . .  TYPEDEF  -----  CHAR     -----  1
LedsP__Led2__makeOutput. . . . . . . .  STATIC   CODE   PROC     0000H  -----
ReverseGPIOP__0__Out__set. . . . . . .  STATIC   CODE   PROC     0000H  -----
cc2430_timer3_4_prescaler_t. . . . . .  * TAG *  -----  ENUM     -----  -----
CC2430_TIMERWDT_8192 . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
ReverseGPIOP__1__Out__set. . . . . . .  STATIC   CODE   PROC     0000H  -----
_off64_t . . . . . . . . . . . . . . .  TYPEDEF  -----  PTR      -----  3
CC2430_RFSTATUS_TX_ACTIVE. . . . . . .  E_CONST  -----  U_CHAR   -----  1
ERETRY . . . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_T1CCTLx_MODE. . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
__nesc_atomic_start. . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  tmp. . . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
CC2430_IEN0_URX0IE . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_T1CTL_DIV . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_IEN0_URX1IE . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
uintmax_t. . . . . . . . . . . . . . .  TYPEDEF  -----  PTR      -----  3
CC2430_TIMIF_T3CH0IF . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
__FILE . . . . . . . . . . . . . . . .  TYPEDEF  -----  STRUCT   -----  68
  _p . . . . . . . . . . . . . . . . .  MEMBER   -----  PTR      0000H  3
  _r . . . . . . . . . . . . . . . . .  MEMBER   -----  INT      0003H  2
  _w . . . . . . . . . . . . . . . . .  MEMBER   -----  INT      0005H  2
  _flags . . . . . . . . . . . . . . .  MEMBER   -----  INT      0007H  2
  _file. . . . . . . . . . . . . . . .  MEMBER   -----  INT      0009H  2
  _bf. . . . . . . . . . . . . . . . .  MEMBER   -----  STRUCT   000BH  5
  _lbfsize . . . . . . . . . . . . . .  MEMBER   -----  INT      0010H  2
  __data . . . . . . . . . . . . . . .  MEMBER   -----  PTR      0012H  3
  _cookie. . . . . . . . . . . . . . .  MEMBER   -----  PTR      0015H  3
  _read. . . . . . . . . . . . . . . .  MEMBER   -----  PTR      0018H  3
  _write . . . . . . . . . . . . . . .  MEMBER   -----  PTR      001BH  3
  _seek. . . . . . . . . . . . . . . .  MEMBER   -----  PTR      001EH  3
  _close . . . . . . . . . . . . . . .  MEMBER   -----  PTR      0021H  3
  _ub. . . . . . . . . . . . . . . . .  MEMBER   -----  STRUCT   0024H  5
  _up. . . . . . . . . . . . . . . . .  MEMBER   -----  PTR      0029H  3
  _ur. . . . . . . . . . . . . . . . .  MEMBER   -----  INT      002CH  2
  _ubuf. . . . . . . . . . . . . . . .  MEMBER   -----  ARRAY    002EH  3
  _nbuf. . . . . . . . . . . . . . . .  MEMBER   -----  ARRAY    0031H  1
  _lb. . . . . . . . . . . . . . . . .  MEMBER   -----  STRUCT   0032H  5
  _blksize . . . . . . . . . . . . . .  MEMBER   -----  INT      0037H  2
  _flags2. . . . . . . . . . . . . . .  MEMBER   -----  INT      0039H  2
  _offset. . . . . . . . . . . . . . .  MEMBER   -----  PTR      003BH  3
  _seek64. . . . . . . . . . . . . . .  MEMBER   -----  PTR      003EH  3
  _lock. . . . . . . . . . . . . . . .  MEMBER   -----  VOID_PTR 0041H  3
C51 COMPILER V8.09   APP                                                                   09/19/2014 21:48:16 PAGE 46  

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


uint_fast8_t . . . . . . . . . . . . .  TYPEDEF  -----  U_CHAR   -----  1
EchoP__print__postTask . . . . . . . .  STATIC   CODE   PROC     0000H  -----
  result . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
CC2430_TIMIF_T3CH1IF . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_TIMIF_T4CH0IF . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_T2CNF_CMPIF . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_TIMIF_T4CH1IF . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_T1_CH0IF. . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
U0GCR. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00C5H  1
CC2430_IEN2_UTX0IE . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
cc2430_timerWDT_mode_t . . . . . . . .  * TAG *  -----  ENUM     -----  -----
CC2430_T1_CH1IF. . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_CLKCON_TICKSPD. . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
U0BUF. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00C1H  1
CC2430_IEN2_UTX1IE . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
LedsP__Led0__clr . . . . . . . . . . .  STATIC   CODE   PROC     0000H  -----
CC2430_TIMERMAC_MODE_RUN . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_T1_CH2IF. . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_TICKF_DIV_128 . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
ERESERVE . . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_CLKCON_OSC32K . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
___nesc_atomic_end . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  oldSreg. . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
_ssize_t . . . . . . . . . . . . . . .  TYPEDEF  -----  INT      -----  2
CC2430_T34CTL_MODE_MASK. . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_T2CNF_RUN . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_T2CNF_CMSEL . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_SLEEP_OSC_PD. . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_RFIM_RREG_PD. . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
__vector_2 . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
PlatformP__Init__init. . . . . . . . .  STATIC   CODE   PROC     0000H  -----
  new_clkcon . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
CC2430_T2CNF_PERIF . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
EchoP__Boot__booted. . . . . . . . . .  STATIC   CODE   PROC     0000H  -----
CC2430_RFIF_RREG_ON. . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
nxle_uint8_t . . . . . . . . . . . . .  TYPEDEF  -----  STRUCT   -----  1
  _data. . . . . . . . . . . . . . . .  MEMBER   -----  ARRAY    0000H  1
intmax_t . . . . . . . . . . . . . . .  TYPEDEF  -----  PTR      -----  3
_on_exit_args. . . . . . . . . . . . .  * TAG *  -----  STRUCT   -----  200
  _fnargs. . . . . . . . . . . . . . .  MEMBER   -----  ARRAY    0000H  96
  _dso_handle. . . . . . . . . . . . .  MEMBER   -----  ARRAY    0060H  96
  _fntypes . . . . . . . . . . . . . .  MEMBER   -----  U_LONG   00C0H  4
  _is_cxa. . . . . . . . . . . . . . .  MEMBER   -----  U_LONG   00C4H  4
int_fast8_t. . . . . . . . . . . . . .  TYPEDEF  -----  CHAR     -----  1
FALSE. . . . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
wchar_t. . . . . . . . . . . . . . . .  TYPEDEF  -----  U_INT    -----  2
__vector_7 . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  __nesc_atomic. . . . . . . . . . . .  AUTO     XDATA  U_CHAR   0000H  1
  done . . . . . . . . . . . . . . . .  * REG *  DATA   INT      0004H  2
cc2430_timerMAC_if_t . . . . . . . . .  * TAG *  -----  ENUM     -----  -----
CC2430_T1CTL_DIV_MASK. . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_RFIF_CSP_INT. . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
ECANCEL. . . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
_SchedulerBasicP__TaskBasic__default__  STATIC   CODE   PROC     0000H  -----
  id . . . . . . . . . . . . . . . . .  AUTO     XDATA  U_CHAR   0000H  1
U0CSR. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0086H  1
_fpos_t. . . . . . . . . . . . . . . .  TYPEDEF  -----  LONG     -----  4
C51 COMPILER V8.09   APP                                                                   09/19/2014 21:48:16 PAGE 47  

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


LedsP__Led0__set . . . . . . . . . . .  STATIC   CODE   PROC     0000H  -----
EchoP__print__runTask. . . . . . . . .  STATIC   CODE   PROC     0000H  -----
CC2430_TIMERWDT_64 . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_TIMER1_DIV_32 . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_RFSTATUS_SFD. . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
uintptr_t. . . . . . . . . . . . . . .  TYPEDEF  -----  U_INT    -----  2
LedsP__Led1__set . . . . . . . . . . .  STATIC   CODE   PROC     0000H  -----
CC2430_TIMER1_MODE_FREE. . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_SLEEP_DIV . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
U0UCR. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00C4H  1
_off_t . . . . . . . . . . . . . . . .  TYPEDEF  -----  LONG     -----  4
LedsP__Led2__set . . . . . . . . . . .  STATIC   CODE   PROC     0000H  -----
CC2430_CLKCON_TICKSPD_MASK . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_IRCON_DMAIF . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
__sbuf . . . . . . . . . . . . . . . .  * TAG *  -----  STRUCT   -----  5
  _base. . . . . . . . . . . . . . . .  MEMBER   -----  PTR      0000H  3
  _size. . . . . . . . . . . . . . . .  MEMBER   -----  INT      0003H  2
lldiv_t. . . . . . . . . . . . . . . .  TYPEDEF  -----  STRUCT   -----  6
  quot . . . . . . . . . . . . . . . .  MEMBER   -----  PTR      0000H  3
  rem. . . . . . . . . . . . . . . . .  MEMBER   -----  PTR      0003H  3
_atexit. . . . . . . . . . . . . . . .  * TAG *  -----  STRUCT   -----  301
  _next. . . . . . . . . . . . . . . .  MEMBER   -----  PTR      0000H  3
  _ind . . . . . . . . . . . . . . . .  MEMBER   -----  INT      0003H  2
  _fns . . . . . . . . . . . . . . . .  MEMBER   -----  ARRAY    0005H  96
  _on_exit_args. . . . . . . . . . . .  MEMBER   -----  STRUCT   0065H  200
PlatformP__LedsInit__init. . . . . . .  STATIC   CODE   PROC     0000H  -----
  result . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
CC2430_WDCTL_CLR . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
_rand48. . . . . . . . . . . . . . . .  * TAG *  -----  STRUCT   -----  14
  _seed. . . . . . . . . . . . . . . .  MEMBER   -----  ARRAY    0000H  6
  _mult. . . . . . . . . . . . . . . .  MEMBER   -----  ARRAY    0006H  6
  _add . . . . . . . . . . . . . . . .  MEMBER   -----  U_INT    000CH  2
nxle_int8_t. . . . . . . . . . . . . .  TYPEDEF  -----  STRUCT   -----  1
  _data. . . . . . . . . . . . . . . .  MEMBER   -----  ARRAY    0000H  1
_SchedulerBasicP__pushTask . . . . . .  STATIC   CODE   PROC     0000H  -----
  id . . . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0006H  1
CC2430_RFIM_CSP_INT. . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
SchedulerBasicP__NUM_TASKS . . . . . .  E_CONST  -----  U_CHAR   -----  1
nx_bool. . . . . . . . . . . . . . . .  TYPEDEF  -----  STRUCT   -----  1
  _data. . . . . . . . . . . . . . . .  MEMBER   -----  ARRAY    0000H  1
__nesc_nxbase_nx_uint32_t. . . . . . .  TYPEDEF  -----  U_LONG   -----  4
RealMainP__Boot__booted. . . . . . . .  STATIC   CODE   PROC     0000H  -----
CC2430_IEN0_ADCIE. . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
_HalCC2430SimpleUartP__uart0__get. . .  STATIC   CODE   PROC     0000H  -----
  _data. . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
RealMainP__PlatformInit__init. . . . .  STATIC   CODE   PROC     0000H  -----
  result . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
CC2430_T2CNF_OFCMPIF . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_T1CTL_OVFIF . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
__nesc_nxbase_nx_uint16_t. . . . . . .  TYPEDEF  -----  U_INT    -----  2
__nesc_disable_interrupt . . . . . . .  STATIC   CODE   PROC     0000H  -----
CC2430_RREG_DELAY_31 . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_TICKF_DIV_1 . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
intptr_t . . . . . . . . . . . . . . .  TYPEDEF  -----  INT      -----  2
uint_least32_t . . . . . . . . . . . .  TYPEDEF  -----  U_LONG   -----  4
CC2430_TICKF_DIV_2 . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
SLEEP. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00BEH  1
C51 COMPILER V8.09   APP                                                                   09/19/2014 21:48:16 PAGE 48  

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


ELAST. . . . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_SLEEP_HFRC_STB. . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
uint_least16_t . . . . . . . . . . . .  TYPEDEF  -----  U_INT    -----  2
NoPinC__0__GeneralIO__toggle . . . . .  STATIC   CODE   PROC     0000H  -----
CC2430_TIMERWDT_MODE_WDT . . . . . . .  E_CONST  -----  U_CHAR   -----  1
cc2430_timerMAC_T2CNF_t. . . . . . . .  * TAG *  -----  ENUM     -----  -----
CC2430_TICKF_DIV_4 . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
uint32_t . . . . . . . . . . . . . . .  TYPEDEF  -----  U_LONG   -----  4
SchedulerBasicP__m_head. . . . . . . .  PUBLIC   XDATA  U_CHAR   0003H  1
RealMainP__SoftwareInit__init. . . . .  STATIC   CODE   PROC     0000H  -----
  result . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
CC2430_WDCTL_INT . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_RREG_DELAY_63 . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    771    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      4      11
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
